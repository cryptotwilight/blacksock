{
	"id": "14f04d0882a95cc4f509d3fc7e668bb1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/core/system/flattened/BKSDirectory_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: contracts/interfaces/system/IBKSDirectory.sol\n\n\npragma solidity >=0.8.2 <0.9.0;\n /**\n  * @title Black Sock - Directory\n  * @author cryptotwilight\n  * @dev This is the directory used to keep track of all user generated addresses in the Black Sock decentralized protocol \n  * @custom:buidl at Buidl Up 2023 https://www.buidlbox.io\n  * @custom:contact @blockstarlogic1 (Twitter)\n  */\n\ninterface IBKSDirectory { \n\n    function getBKSAddresses() view external returns (address [] memory _addresses);\n\n    function isBKSAddress(address _address) view external returns (bool _isBKSAddress);\n\n    function getAddressOwner(address _address) view external returns (address _owner);\n\n    function addBKSAddress(address _address, address _userOwner) external returns (bool _added);\n}\n// File: contracts/interfaces/system/IBKSOpsRegister.sol\n\n\npragma solidity >=0.8.2 <0.9.0;\n /**\n  * @title Black Sock - Operations Register \n  * @author cryptotwilight\n  * @dev This is the Operations Register that is used to keep track of all system level contracts in the Black Sock decentralized social protocol \n  * @custom:buidl at Buidl Up 2023 https://www.buidlbox.io\n  * @custom:contact @blockstarlogic1 (Twitter)\n  */\ninterface IBKSOpsRegister { \n\n    function getNames() view external returns (string [] memory _names);\n\n    function getAddresses() view external returns (string [] memory _name, address [] memory _address);\n\n    function getAddress(string memory _name) view external returns (address _address);\n\n    function getName(address _address) view external returns (string memory _name);\n\n    function isSystemAddress(address _address) view external returns (bool _isSystemAddress);\n\n}\n// File: contracts/interfaces/system/IBKSVersion.sol\n\n\npragma solidity >=0.7.0 <0.9.0;\n /**\n  * @title Black Sock - Version\n  * @author cryptotwilight\n  * @dev This is the versioning and introspection interface used by the Black Sock decentralized social protocol\n  * @custom:buidl Buidl Up 2023 https://www.buidlbox.io\n  * @custom:contact @blockstarlogic1 (Twitter)\n  */\ninterface IBKSVersion { \n\n    function getName() view external returns (string memory _name);\n    \n    function getVersion() view external returns (uint256 _version);\n\n}\n// File: contracts/core/system/BKSSystemContract.sol\n\n\npragma solidity >=0.8.2 <0.9.0;\n /**\n  * @title Black Sock - System Contract\n  * @author cryptotwilight\n  * @dev This is the super contract for system contracts in the Black Sock decentralized social protocol\n  * @custom:buidl Buidl Up 2023 https://www.buidlbox.io\n  * @custom:contact @blockstarlogic1 (Twitter)\n  */\n\n\n\n\n\nabstract contract BKSSystemContract is IBKSVersion { \n\n    using Strings for address; \n\n    string constant BKS_DIRECTORY_CA = \"BKS_DIRECTORY_CORE\";\n    string constant BKS_ADMIN_CA = \"BKS_ADMIN\";\n\n    uint256 index; \n\n    modifier systemOnly() {\n        require(register.isSystemAddress(msg.sender),string.concat(\"system only x  :x: \",msg.sender.toHexString()));\n        _;\n    }\n\n    modifier adminOnly() { \n        require(msg.sender == register.getAddress(BKS_ADMIN_CA),string.concat(\"admin only x  :x: \",msg.sender.toHexString()));\n        _;\n    }\n\n    modifier bksOnly() { \n        require (IBKSDirectory(register.getAddress(BKS_DIRECTORY_CA)).isBKSAddress(msg.sender), string.concat(\"unknown bks address :x: \",msg.sender.toHexString()));\n        _;\n    }\n\n    IBKSOpsRegister register; \n\n    constructor(address _opsRegister) {\n        register = IBKSOpsRegister(_opsRegister);\n    }\n\n    //========================== INTERNAL =======================\n\n    function getIndex() internal returns (uint256 _index) {\n        _index = index++;\n        return _index; \n    }\n\n}\n// File: contracts/core/system/BKSDirectory.sol\n\n\npragma solidity >=0.8.2 <0.9.0;\n /**\n  * @title Black Sock - Directory\n  * @author cryptotwilight\n  * @dev This is the Directory implementation for the Black Sock decentralized social protocol \n  * @custom:buidl at Buidl Up 2023 https://www.buidlbox.io\n  * @custom:contact @blockstarlogic1 (Twitter)\n  */\n\n\ncontract BKSDirectory is BKSSystemContract, IBKSDirectory {\n\n    string constant name  = \"BKS_DIRECTORY_CORE\";\n    uint256 constant version = 1; \n\n    address [] addresses; \n    mapping(address=>bool) knownBKSAddress;\n    mapping(address=>address) ownerByAddress; \n    mapping(address=>address[]) addressesByOwner; \n\n    constructor(address _register) BKSSystemContract(_register){\n    }\n\n    function getName() pure external returns (string memory _name){\n        return name; \n    }\n    function getVersion() pure external returns (uint256 _version){\n        return version; \n    }\n\n    function getBKSAddresses() view external returns (address [] memory _addresses){\n        return addresses; \n    }\n\n    function getAddressOwner(address _address) view external returns (address _owner) {\n        return ownerByAddress[_address];\n    }\n\n    function getAddresses(address _owner) view external returns (address [] memory _addresses) {\n        return addressesByOwner[_owner];\n    }\n\n    function isBKSAddress(address _address) view  external returns (bool _isBKSAddress){\n        return knownBKSAddress[_address];\n    }\n\n    function addBKSAddress(address _address, address _owner) external systemOnly returns (bool _added){\n        addresses.push(_address);\n        knownBKSAddress[_address] = true; \n        ownerByAddress[_address] = _owner; \n        addressesByOwner[_owner].push(_address);\n        return true;\n    }\n\n\n}\n\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"contracts/core/system/flattened/BKSDirectory_flattened.sol": {
				"BKSDirectory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_register",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "addBKSAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_added",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getAddressOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "getAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBKSAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_version",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isBKSAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_isBKSAddress",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "cryptotwilight",
						"custom:buidl": "at Buidl Up 2023 https://www.buidlbox.io",
						"custom:contact": "@blockstarlogic1 (Twitter)",
						"details": "This is the Directory implementation for the Black Sock decentralized social protocol ",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "Black Sock - Directory",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23512:24939  contract BKSDirectory is BKSSystemContract, IBKSDirectory {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23833:23899  constructor(address _register) BKSSystemContract(_register){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22920:22928  register */\n  0x01\n    /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22920:22960  register = IBKSOpsRegister(_opsRegister) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23512:24939  contract BKSDirectory is BKSSystemContract, IBKSDirectory {... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_11\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_11:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_12:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_9:\n    /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23512:24939  contract BKSDirectory is BKSSystemContract, IBKSDirectory {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23512:24939  contract BKSDirectory is BKSSystemContract, IBKSDirectory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ab7be41\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x7ab7be41\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x906f6343\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbd1b2210\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe5bc301e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x0d8e6e2c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x17d7de7c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x783db809\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24001:24095  function getVersion() pure external returns (uint256 _version){... */\n    tag_3:\n      mload(0x40)\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23654:23655  1 */\n      0x01\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24001:24095  function getVersion() pure external returns (uint256 _version){... */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23905:23996  function getName() pure external returns (string memory _name){... */\n    tag_4:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23984:23988  name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      shl(0x70, 0x424b535f4449524543544f52595f434f5245)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23905:23996  function getName() pure external returns (string memory _name){... */\n      swap1\n      mload\n      tag_13\n      swap2\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23984:23988  name */\n      swap1\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":23905:23996  function getName() pure external returns (string memory _name){... */\n      tag_18\n      jump\t// in\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24220:24350  function getAddressOwner(address _address) view external returns (address _owner) {... */\n    tag_5:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24319:24343  ownerByAddress[_address] */\n      swap1\n      dup2\n      and\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24286:24300  address _owner */\n      0x00\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24319:24343  ownerByAddress[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24319:24333  ownerByAddress */\n      0x04\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24319:24343  ownerByAddress[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      swap1\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24220:24350  function getAddressOwner(address _address) view external returns (address _owner) {... */\n      jump\n    tag_19:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1385:1417   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1367:1418   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1340:1358   */\n      add\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24220:24350  function getAddressOwner(address _address) view external returns (address _owner) {... */\n      tag_13\n        /* \"#utility.yul\":1221:1424   */\n      jump\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24101:24214  function getBKSAddresses() view external returns (address [] memory _addresses){... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24356:24495  function getAddresses(address _owner) view external returns (address [] memory _addresses) {... */\n    tag_7:\n      tag_25\n      tag_30\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24501:24633  function isBKSAddress(address _address) view  external returns (bool _isBKSAddress){... */\n    tag_8:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_34:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24601:24626  knownBKSAddress[_address] */\n      and\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24565:24583  bool _isBKSAddress */\n      0x00\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24601:24626  knownBKSAddress[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24601:24616  knownBKSAddress */\n      0x03\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24601:24626  knownBKSAddress[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24501:24633  function isBKSAddress(address _address) view  external returns (bool _isBKSAddress){... */\n      jump\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":2257:2271   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2250:2272   */\n      iszero\n        /* \"#utility.yul\":2232:2273   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2220:2222   */\n      0x20\n        /* \"#utility.yul\":2205:2223   */\n      add\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24501:24633  function isBKSAddress(address _address) view  external returns (bool _isBKSAddress){... */\n      tag_13\n        /* \"#utility.yul\":2092:2279   */\n      jump\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24639:24935  function addBKSAddress(address _address, address _owner) external systemOnly returns (bool _added){... */\n    tag_9:\n      tag_33\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24101:24214  function getBKSAddresses() view external returns (address [] memory _addresses){... */\n    tag_26:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24151:24179  address [] memory _addresses */\n      0x60\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24197:24206  addresses */\n      0x02\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24190:24206  return addresses */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_48:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_48\n      jumpi\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24101:24214  function getBKSAddresses() view external returns (address [] memory _addresses){... */\n      swap1\n      jump\t// out\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24356:24495  function getAddresses(address _owner) view external returns (address [] memory _addresses) {... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24464:24488  addressesByOwner[_owner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24464:24480  addressesByOwner */\n      0x05\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24464:24488  addressesByOwner[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24457:24488  return addressesByOwner[_owner] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24417:24445  address [] memory _addresses */\n      0x60\n      swap4\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24457:24488  return addressesByOwner[_owner] */\n      swap3\n      dup4\n      add\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24464:24488  addressesByOwner[_owner] */\n      dup3\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24457:24488  return addressesByOwner[_owner] */\n      dup3\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_51:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_51\n      jumpi\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24356:24495  function getAddresses(address _owner) view external returns (address [] memory _addresses) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24639:24935  function addBKSAddress(address _address, address _owner) external systemOnly returns (bool _added){... */\n    tag_41:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22339:22347  register */\n      sload(0x01)\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22339:22375  register.isSystemAddress(msg.sender) */\n      mload(0x40)\n      shl(0xe1, 0x17cf63dd)\n      dup2\n      mstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22364:22374  msg.sender */\n      caller\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22339:22375  register.isSystemAddress(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1367:1418   */\n      mstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24725:24736  bool _added */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22339:22347  register */\n      and\n      swap1\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22339:22363  register.isSystemAddress */\n      0x2f9ec7ba\n      swap1\n        /* \"#utility.yul\":1340:1358   */\n      0x24\n      add\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22339:22375  register.isSystemAddress(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22412:22436  msg.sender.toHexString() */\n      tag_59\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22412:22422  msg.sender */\n      caller\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22412:22434  msg.sender.toHexString */\n      tag_60\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22412:22436  msg.sender.toHexString() */\n      jump\t// in\n    tag_59:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22376:22437  string.concat(\"system only x  :x: \",msg.sender.toHexString()) */\n      add(0x20, mload(0x40))\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22331:22438  require(register.isSystemAddress(msg.sender),string.concat(\"system only x  :x: \",msg.sender.toHexString())) */\n      swap1\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n      pop\n      pop\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24747:24756  addresses */\n      0x02\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24747:24771  addresses.push(_address) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      swap1\n      swap3\n      sstore\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n      0x00\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24781:24806  knownBKSAddress[_address] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24781:24796  knownBKSAddress */\n      0x03\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24747:24771  addresses.push(_address) */\n      0x20\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24781:24806  knownBKSAddress[_address] */\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24781:24813  knownBKSAddress[_address] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup9\n      or\n      swap1\n      sstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24824:24838  ownerByAddress */\n      0x04\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24824:24848  ownerByAddress[_address] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24824:24857  ownerByAddress[_address] = _owner */\n      dup1\n      sload\n      swap5\n      dup10\n      and\n      swap5\n      dup7\n      and\n      dup6\n      or\n      swap1\n      sstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24868:24892  addressesByOwner[_owner] */\n      swap3\n      dup3\n      mstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24868:24884  addressesByOwner */\n      0x05\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24868:24892  addressesByOwner[_owner] */\n      dup2\n      mstore\n      swap2\n      dup2\n      keccak256\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24868:24907  addressesByOwner[_owner].push(_address) */\n      dup1\n      sload\n      dup1\n      dup8\n      add\n      dup3\n      sstore\n      swap1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":22448:22449  _ */\n    tag_65:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":24639:24935  function addBKSAddress(address _address, address _owner) external systemOnly returns (bool _added){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":19060:19208  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_60:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":19118:19131  string memory */\n      0x60\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":19150:19201  toHexString(uint256(uint160(addr)), ADDRESS_LENGTH) */\n      tag_65\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":19162:19184  uint256(uint160(addr)) */\n      dup4\n      and\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":16746:16748  20 */\n      0x14\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18451:18464  string memory */\n      0x60\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18497:18502  value */\n      dup3\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18476:18494  uint256 localValue */\n      0x00\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18544:18554  2 * length */\n      tag_72\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18548:18554  length */\n      dup5\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18544:18545  2 */\n      0x02\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18544:18554  2 * length */\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18544:18558  2 * length + 2 */\n      tag_74\n      swap1\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18557:18558  2 */\n      0x02\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18544:18558  2 * length + 2 */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18534:18559  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_77\n      jumpi\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_79:\n      pop\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18512:18559  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18569:18575  buffer */\n      dup2\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18576:18577  0 */\n      0x00\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18569:18578  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_81\n      jumpi\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      0x20\n      add\n      add\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18569:18584  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18594:18600  buffer */\n      dup2\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18601:18602  1 */\n      0x01\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18594:18603  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_84\n      jumpi\n      tag_84\n      tag_82\n      jump\t// in\n    tag_84:\n      0x20\n      add\n      add\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18594:18609  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18624:18633  uint256 i */\n      0x00\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18636:18646  2 * length */\n      tag_88\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18640:18646  length */\n      dup6\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18636:18637  2 */\n      0x02\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18636:18646  2 * length */\n      tag_73\n      jump\t// in\n    tag_88:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18636:18650  2 * length + 1 */\n      tag_89\n      swap1\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18649:18650  1 */\n      0x01\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18636:18650  2 * length + 1 */\n      tag_75\n      jump\t// in\n    tag_89:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18624:18650  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18619:18759  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_85:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18656:18657  1 */\n      0x01\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18652:18653  i */\n      dup2\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18652:18657  i > 1 */\n      gt\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18619:18759  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_86\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18701:18711  localValue */\n      dup4\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18714:18717  0xf */\n      0x0f\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18701:18717  localValue & 0xf */\n      and\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18690:18718  HEX_DIGITS[localValue & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_91\n      jumpi\n      tag_91\n      tag_82\n      jump\t// in\n    tag_91:\n      byte\n      0xf8\n      shl\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18678:18684  buffer */\n      dup3\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18685:18686  i */\n      dup3\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18678:18687  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_82\n      jump\t// in\n    tag_93:\n      0x20\n      add\n      add\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18678:18718  buffer[i] = HEX_DIGITS[localValue & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18747:18748  4 */\n      0x04\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18732:18748  localValue >>= 4 */\n      swap3\n      swap1\n      swap3\n      shr\n      swap2\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18659:18662  --i */\n      tag_94\n      dup2\n      tag_95\n      jump\t// in\n    tag_94:\n      swap1\n      pop\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18619:18759  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_85)\n    tag_86:\n      pop\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18772:18787  localValue != 0 */\n      dup2\n      iszero\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18768:18864  if (localValue != 0) {... */\n      tag_96\n      jumpi\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18810:18853  StringsInsufficientHexLength(value, length) */\n      mload(0x40)\n      shl(0xe0, 0xe22e27eb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4291:4316   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":4332:4350   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4325:4359   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":4264:4282   */\n      0x44\n      add\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18810:18853  StringsInsufficientHexLength(value, length) */\n      tag_64\n        /* \"#utility.yul\":4117:4365   */\n      jump\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18768:18864  if (localValue != 0) {... */\n    tag_96:\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18887:18893  buffer */\n      swap5\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":18376:18901  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:446   */\n    tag_99:\n        /* \"#utility.yul\":281:282   */\n      0x00\n        /* \"#utility.yul\":291:404   */\n    tag_105:\n        /* \"#utility.yul\":305:311   */\n      dup4\n        /* \"#utility.yul\":302:303   */\n      dup2\n        /* \"#utility.yul\":299:312   */\n      lt\n        /* \"#utility.yul\":291:404   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":381:392   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":375:393   */\n      mload\n        /* \"#utility.yul\":362:373   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":355:394   */\n      mstore\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":320:330   */\n      add\n        /* \"#utility.yul\":291:404   */\n      jump(tag_105)\n    tag_107:\n      pop\n      pop\n        /* \"#utility.yul\":438:439   */\n      0x00\n        /* \"#utility.yul\":420:436   */\n      swap2\n      add\n        /* \"#utility.yul\":413:440   */\n      mstore\n        /* \"#utility.yul\":196:446   */\n      jump\t// out\n        /* \"#utility.yul\":451:847   */\n    tag_18:\n        /* \"#utility.yul\":600:602   */\n      0x20\n        /* \"#utility.yul\":589:598   */\n      dup2\n        /* \"#utility.yul\":582:603   */\n      mstore\n        /* \"#utility.yul\":563:567   */\n      0x00\n        /* \"#utility.yul\":632:638   */\n      dup3\n        /* \"#utility.yul\":626:639   */\n      mload\n        /* \"#utility.yul\":675:681   */\n      dup1\n        /* \"#utility.yul\":670:672   */\n      0x20\n        /* \"#utility.yul\":659:668   */\n      dup5\n        /* \"#utility.yul\":655:673   */\n      add\n        /* \"#utility.yul\":648:682   */\n      mstore\n        /* \"#utility.yul\":691:770   */\n      tag_109\n        /* \"#utility.yul\":763:769   */\n      dup2\n        /* \"#utility.yul\":758:760   */\n      0x40\n        /* \"#utility.yul\":747:756   */\n      dup6\n        /* \"#utility.yul\":743:761   */\n      add\n        /* \"#utility.yul\":738:740   */\n      0x20\n        /* \"#utility.yul\":730:736   */\n      dup8\n        /* \"#utility.yul\":726:741   */\n      add\n        /* \"#utility.yul\":691:770   */\n      tag_99\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":831:833   */\n      0x1f\n        /* \"#utility.yul\":810:825   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":806:835   */\n      and\n        /* \"#utility.yul\":791:836   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":838:840   */\n      0x40\n        /* \"#utility.yul\":787:841   */\n      add\n      swap3\n        /* \"#utility.yul\":451:847   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":852:1025   */\n    tag_100:\n        /* \"#utility.yul\":920:940   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":969:1000   */\n      dup2\n      and\n        /* \"#utility.yul\":959:1001   */\n      dup2\n      eq\n        /* \"#utility.yul\":949:1019   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1015:1016   */\n      0x00\n        /* \"#utility.yul\":1012:1013   */\n      dup1\n        /* \"#utility.yul\":1005:1017   */\n      revert\n        /* \"#utility.yul\":949:1019   */\n    tag_111:\n        /* \"#utility.yul\":852:1025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1216   */\n    tag_21:\n        /* \"#utility.yul\":1089:1095   */\n      0x00\n        /* \"#utility.yul\":1142:1144   */\n      0x20\n        /* \"#utility.yul\":1130:1139   */\n      dup3\n        /* \"#utility.yul\":1121:1128   */\n      dup5\n        /* \"#utility.yul\":1117:1140   */\n      sub\n        /* \"#utility.yul\":1113:1145   */\n      slt\n        /* \"#utility.yul\":1110:1162   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1158:1159   */\n      0x00\n        /* \"#utility.yul\":1155:1156   */\n      dup1\n        /* \"#utility.yul\":1148:1160   */\n      revert\n        /* \"#utility.yul\":1110:1162   */\n    tag_113:\n        /* \"#utility.yul\":1181:1210   */\n      tag_114\n        /* \"#utility.yul\":1200:1209   */\n      dup3\n        /* \"#utility.yul\":1181:1210   */\n      tag_100\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1171:1210   */\n      swap4\n        /* \"#utility.yul\":1030:1216   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1429:2087   */\n    tag_28:\n        /* \"#utility.yul\":1600:1602   */\n      0x20\n        /* \"#utility.yul\":1652:1673   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1722:1735   */\n      dup3\n      mload\n        /* \"#utility.yul\":1625:1643   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1744:1766   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1571:1575   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1600:1602   */\n      swap1\n        /* \"#utility.yul\":1823:1838   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":1797:1799   */\n      0x40\n        /* \"#utility.yul\":1782:1800   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1571:1575   */\n      dup5\n        /* \"#utility.yul\":1866:2061   */\n    tag_117:\n        /* \"#utility.yul\":1880:1886   */\n      dup2\n        /* \"#utility.yul\":1877:1878   */\n      dup2\n        /* \"#utility.yul\":1874:1887   */\n      lt\n        /* \"#utility.yul\":1866:2061   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":1945:1958   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1941:1980   */\n      and\n        /* \"#utility.yul\":1929:1981   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2036:2051   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2001:2013   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":1977:1978   */\n      0x01\n        /* \"#utility.yul\":1895:1904   */\n      add\n        /* \"#utility.yul\":1866:2061   */\n      jump(tag_117)\n    tag_119:\n      pop\n        /* \"#utility.yul\":2078:2081   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1429:2087   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2284:2544   */\n    tag_40:\n        /* \"#utility.yul\":2352:2358   */\n      0x00\n        /* \"#utility.yul\":2360:2366   */\n      dup1\n        /* \"#utility.yul\":2413:2415   */\n      0x40\n        /* \"#utility.yul\":2401:2410   */\n      dup4\n        /* \"#utility.yul\":2392:2399   */\n      dup6\n        /* \"#utility.yul\":2388:2411   */\n      sub\n        /* \"#utility.yul\":2384:2416   */\n      slt\n        /* \"#utility.yul\":2381:2433   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":2429:2430   */\n      0x00\n        /* \"#utility.yul\":2426:2427   */\n      dup1\n        /* \"#utility.yul\":2419:2431   */\n      revert\n        /* \"#utility.yul\":2381:2433   */\n    tag_122:\n        /* \"#utility.yul\":2452:2481   */\n      tag_123\n        /* \"#utility.yul\":2471:2480   */\n      dup4\n        /* \"#utility.yul\":2452:2481   */\n      tag_100\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2442:2481   */\n      swap2\n      pop\n        /* \"#utility.yul\":2500:2538   */\n      tag_124\n        /* \"#utility.yul\":2534:2536   */\n      0x20\n        /* \"#utility.yul\":2523:2532   */\n      dup5\n        /* \"#utility.yul\":2519:2537   */\n      add\n        /* \"#utility.yul\":2500:2538   */\n      tag_100\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2490:2538   */\n      swap1\n      pop\n        /* \"#utility.yul\":2284:2544   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2549:2826   */\n    tag_58:\n        /* \"#utility.yul\":2616:2622   */\n      0x00\n        /* \"#utility.yul\":2669:2671   */\n      0x20\n        /* \"#utility.yul\":2657:2666   */\n      dup3\n        /* \"#utility.yul\":2648:2655   */\n      dup5\n        /* \"#utility.yul\":2644:2667   */\n      sub\n        /* \"#utility.yul\":2640:2672   */\n      slt\n        /* \"#utility.yul\":2637:2689   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2685:2686   */\n      0x00\n        /* \"#utility.yul\":2682:2683   */\n      dup1\n        /* \"#utility.yul\":2675:2687   */\n      revert\n        /* \"#utility.yul\":2637:2689   */\n    tag_126:\n        /* \"#utility.yul\":2717:2726   */\n      dup2\n        /* \"#utility.yul\":2711:2727   */\n      mload\n        /* \"#utility.yul\":2770:2775   */\n      dup1\n        /* \"#utility.yul\":2763:2776   */\n      iszero\n        /* \"#utility.yul\":2756:2777   */\n      iszero\n        /* \"#utility.yul\":2749:2754   */\n      dup2\n        /* \"#utility.yul\":2746:2778   */\n      eq\n        /* \"#utility.yul\":2736:2796   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2789:2790   */\n      dup1\n        /* \"#utility.yul\":2782:2794   */\n      revert\n        /* \"#utility.yul\":2831:3272   */\n    tag_62:\n      shl(0x6d, 0x039bcb9ba32b69037b7363c903c10101d3c1d1)\n        /* \"#utility.yul\":3078:3081   */\n      dup2\n        /* \"#utility.yul\":3071:3105   */\n      mstore\n        /* \"#utility.yul\":3053:3056   */\n      0x00\n        /* \"#utility.yul\":3134:3140   */\n      dup3\n        /* \"#utility.yul\":3128:3141   */\n      mload\n        /* \"#utility.yul\":3150:3225   */\n      tag_129\n        /* \"#utility.yul\":3218:3224   */\n      dup2\n        /* \"#utility.yul\":3213:3215   */\n      0x13\n        /* \"#utility.yul\":3208:3211   */\n      dup6\n        /* \"#utility.yul\":3204:3216   */\n      add\n        /* \"#utility.yul\":3197:3201   */\n      0x20\n        /* \"#utility.yul\":3189:3195   */\n      dup8\n        /* \"#utility.yul\":3185:3202   */\n      add\n        /* \"#utility.yul\":3150:3225   */\n      tag_99\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3245:3261   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3263:3265   */\n      0x13\n        /* \"#utility.yul\":3241:3266   */\n      add\n      swap3\n        /* \"#utility.yul\":2831:3272   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3404   */\n    tag_101:\n        /* \"#utility.yul\":3338:3348   */\n      0x4e487b71\n        /* \"#utility.yul\":3333:3336   */\n      0xe0\n        /* \"#utility.yul\":3329:3349   */\n      shl\n        /* \"#utility.yul\":3326:3327   */\n      0x00\n        /* \"#utility.yul\":3319:3350   */\n      mstore\n        /* \"#utility.yul\":3369:3373   */\n      0x11\n        /* \"#utility.yul\":3366:3367   */\n      0x04\n        /* \"#utility.yul\":3359:3374   */\n      mstore\n        /* \"#utility.yul\":3393:3397   */\n      0x24\n        /* \"#utility.yul\":3390:3391   */\n      0x00\n        /* \"#utility.yul\":3383:3398   */\n      revert\n        /* \"#utility.yul\":3409:3577   */\n    tag_73:\n        /* \"#utility.yul\":3482:3491   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3513:3522   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3530:3545   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3524:3546   */\n      dup5\n      eq\n        /* \"#utility.yul\":3510:3547   */\n      or\n        /* \"#utility.yul\":3500:3571   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":3551:3569   */\n      tag_65\n      tag_101\n      jump\t// in\n        /* \"#utility.yul\":3582:3707   */\n    tag_75:\n        /* \"#utility.yul\":3647:3656   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3668:3678   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3665:3701   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":3681:3699   */\n      tag_65\n      tag_101\n      jump\t// in\n        /* \"#utility.yul\":3712:3839   */\n    tag_78:\n        /* \"#utility.yul\":3773:3783   */\n      0x4e487b71\n        /* \"#utility.yul\":3768:3771   */\n      0xe0\n        /* \"#utility.yul\":3764:3784   */\n      shl\n        /* \"#utility.yul\":3761:3762   */\n      0x00\n        /* \"#utility.yul\":3754:3785   */\n      mstore\n        /* \"#utility.yul\":3804:3808   */\n      0x41\n        /* \"#utility.yul\":3801:3802   */\n      0x04\n        /* \"#utility.yul\":3794:3809   */\n      mstore\n        /* \"#utility.yul\":3828:3832   */\n      0x24\n        /* \"#utility.yul\":3825:3826   */\n      0x00\n        /* \"#utility.yul\":3818:3833   */\n      revert\n        /* \"#utility.yul\":3844:3971   */\n    tag_82:\n        /* \"#utility.yul\":3905:3915   */\n      0x4e487b71\n        /* \"#utility.yul\":3900:3903   */\n      0xe0\n        /* \"#utility.yul\":3896:3916   */\n      shl\n        /* \"#utility.yul\":3893:3894   */\n      0x00\n        /* \"#utility.yul\":3886:3917   */\n      mstore\n        /* \"#utility.yul\":3936:3940   */\n      0x32\n        /* \"#utility.yul\":3933:3934   */\n      0x04\n        /* \"#utility.yul\":3926:3941   */\n      mstore\n        /* \"#utility.yul\":3960:3964   */\n      0x24\n        /* \"#utility.yul\":3957:3958   */\n      0x00\n        /* \"#utility.yul\":3950:3965   */\n      revert\n        /* \"#utility.yul\":3976:4112   */\n    tag_95:\n        /* \"#utility.yul\":4015:4018   */\n      0x00\n        /* \"#utility.yul\":4043:4048   */\n      dup2\n        /* \"#utility.yul\":4033:4072   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":4052:4070   */\n      tag_141\n      tag_101\n      jump\t// in\n    tag_141:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":4088:4106   */\n      add\n      swap1\n        /* \"#utility.yul\":3976:4112   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122075563f1af22f9a370ae59d526d95a72f0d5e52931fef50e48145f7d13df6801564736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1591": {
									"entryPoint": null,
									"id": 1591,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1642": {
									"entryPoint": null,
									"id": 1642,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:306:1",
										"nodeType": "YulBlock",
										"src": "0:306:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:1",
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:1",
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:1",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nativeSrc": "143:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nativeSrc": "143:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nativeSrc": "112:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nativeSrc": "108:32:1",
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nativeSrc": "105:52:1",
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nativeSrc": "166:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nativeSrc": "179:16:1",
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:1",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:1",
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:1",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:1",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nativeSrc": "260:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nativeSrc": "260:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:1",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:1",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nativeSrc": "239:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:1",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nativeSrc": "235:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nativeSrc": "224:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nativeSrc": "214:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nativeSrc": "207:50:1",
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nativeSrc": "204:70:1",
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nativeSrc": "283:15:1",
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:1",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:1",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:1",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:1",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161080d38038061080d83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61077a806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637ab7be411161005b5780637ab7be411461010e578063906f634314610123578063bd1b221014610136578063e5bc301e1461017257600080fd5b80630d8e6e2c1461008257806317d7de7c14610096578063783db809146100ca575b600080fd5b604051600181526020015b60405180910390f35b6040805180820182526012815271424b535f4449524543544f52595f434f524560701b6020820152905161008d9190610573565b6100f66100d83660046105c2565b6001600160a01b039081166000908152600460205260409020541690565b6040516001600160a01b03909116815260200161008d565b610116610185565b60405161008d91906105e4565b6101166101313660046105c2565b6101e7565b6101626101443660046105c2565b6001600160a01b031660009081526003602052604090205460ff1690565b604051901515815260200161008d565b610162610180366004610631565b61025d565b606060028054806020026020016040519081016040528092919081815260200182805480156101dd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101bf575b5050505050905090565b6001600160a01b03811660009081526005602090815260409182902080548351818402810184019094528084526060939283018282801561025157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610233575b50505050509050919050565b6001546040516317cf63dd60e11b81523360048201526000916001600160a01b031690632f9ec7ba90602401602060405180830381865afa1580156102a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ca9190610664565b6102d3336103be565b6040516020016102e39190610686565b604051602081830303815290604052906103195760405162461bcd60e51b81526004016103109190610573565b60405180910390fd5b50506002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b038086166001600160a01b031992831681179093556000838152600360209081526040808320805460ff19168817905560048252808320805494891694861685179055928252600581529181208054808701825590825291902001805490911690911790555b92915050565b60606103b86001600160a01b038316601460608260006103df8460026106d7565b6103ea9060026106ee565b67ffffffffffffffff81111561040257610402610701565b6040519080825280601f01601f19166020018201604052801561042c576020820181803683370190505b509050600360fc1b8160008151811061044757610447610717565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061047657610476610717565b60200101906001600160f81b031916908160001a905350600061049a8560026106d7565b6104a59060016106ee565b90505b600181111561051d576f181899199a1a9b1b9c1cb0b131b232b360811b83600f16601081106104d9576104d9610717565b1a60f81b8282815181106104ef576104ef610717565b60200101906001600160f81b031916908160001a90535060049290921c916105168161072d565b90506104a8565b5081156105475760405163e22e27eb60e01b81526004810186905260248101859052604401610310565b949350505050565b60005b8381101561056a578181015183820152602001610552565b50506000910152565b602081526000825180602084015261059281604085016020870161054f565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146105bd57600080fd5b919050565b6000602082840312156105d457600080fd5b6105dd826105a6565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156106255783516001600160a01b031683529284019291840191600101610600565b50909695505050505050565b6000806040838503121561064457600080fd5b61064d836105a6565b915061065b602084016105a6565b90509250929050565b60006020828403121561067657600080fd5b815180151581146105dd57600080fd5b72039bcb9ba32b69037b7363c903c10101d3c1d1606d1b8152600082516106b481601385016020870161054f565b9190910160130192915050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103b8576103b86106c1565b808201808211156103b8576103b86106c1565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161073c5761073c6106c1565b50600019019056fea264697066735822122075563f1af22f9a370ae59d526d95a72f0d5e52931fef50e48145f7d13df6801564736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x80D CODESIZE SUB DUP1 PUSH2 0x80D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x77A DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7AB7BE41 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7AB7BE41 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x906F6343 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xBD1B2210 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE5BC301E EQ PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x783DB809 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x424B535F4449524543544F52595F434F5245 PUSH1 0x70 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x573 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0xD8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8D JUMP JUMPDEST PUSH2 0x116 PUSH2 0x185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8D JUMP JUMPDEST PUSH2 0x162 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x233 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17CF63DD PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2F9EC7BA SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x2D3 CALLER PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x319 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP9 OR SWAP1 SSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP5 DUP10 AND SWAP5 DUP7 AND DUP6 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD DUP1 DUP8 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3B8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 PUSH1 0x60 DUP3 PUSH1 0x0 PUSH2 0x3DF DUP5 PUSH1 0x2 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x3EA SWAP1 PUSH1 0x2 PUSH2 0x6EE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x447 JUMPI PUSH2 0x447 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x476 JUMPI PUSH2 0x476 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x49A DUP6 PUSH1 0x2 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x4A5 SWAP1 PUSH1 0x1 PUSH2 0x6EE JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x51D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP4 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x4D9 JUMPI PUSH2 0x4D9 PUSH2 0x717 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4EF JUMPI PUSH2 0x4EF PUSH2 0x717 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH2 0x516 DUP2 PUSH2 0x72D JUMP JUMPDEST SWAP1 POP PUSH2 0x4A8 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE22E27EB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x310 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x56A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x552 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x592 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x54F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DD DUP3 PUSH2 0x5A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x600 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64D DUP4 PUSH2 0x5A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x65B PUSH1 0x20 DUP5 ADD PUSH2 0x5A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH19 0x39BCB9BA32B69037B7363C903C10101D3C1D1 PUSH1 0x6D SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x6B4 DUP2 PUSH1 0x13 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x54F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x13 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0x6C1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0x6C1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x6C1 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x563F1AF22F9A370AE59D526D95A72F0D5E52931FEF50 0xE4 DUP2 GASLIMIT 0xF7 0xD1 RETURNDATASIZE 0xF6 DUP1 ISZERO PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "23512:1427:0:-:0;;;23833:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22920:8;:40;;-1:-1:-1;;;;;;22920:40:0;-1:-1:-1;;;;;22920:40:0;;;;;;;;;;23512:1427;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;:::-;23512:1427:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addBKSAddress_1743": {
									"entryPoint": 605,
									"id": 1743,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressOwner_1679": {
									"entryPoint": null,
									"id": 1679,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAddresses_1692": {
									"entryPoint": 487,
									"id": 1692,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBKSAddresses_1667": {
									"entryPoint": 389,
									"id": 1667,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getName_1650": {
									"entryPoint": null,
									"id": 1650,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getVersion_1658": {
									"entryPoint": null,
									"id": 1658,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isBKSAddress_1704": {
									"entryPoint": null,
									"id": 1704,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_1349": {
									"entryPoint": null,
									"id": 1349,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1369": {
									"entryPoint": 958,
									"id": 1369,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_a7cd720da15681d3dc7da499391ca9468d6a5d72c6d6b1d85ce3e07632843101_t_string_memory_ptr__to_t_bytes19_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1359,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4367:1",
										"nodeType": "YulBlock",
										"src": "0:4367:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:1",
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:25:1",
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nativeSrc": "160:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "262:184:1",
													"nodeType": "YulBlock",
													"src": "262:184:1",
													"statements": [
														{
															"nativeSrc": "272:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "272:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "281:1:1",
																"nodeType": "YulLiteral",
																"src": "281:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "276:1:1",
																	"nodeType": "YulTypedName",
																	"src": "276:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "341:63:1",
																"nodeType": "YulBlock",
																"src": "341:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "366:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "366:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "371:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "371:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "362:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "362:3:1"
																					},
																					"nativeSrc": "362:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "362:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "385:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "385:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "390:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "390:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "381:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "381:3:1"
																							},
																							"nativeSrc": "381:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "381:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "375:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "375:5:1"
																					},
																					"nativeSrc": "375:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "375:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "355:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "355:6:1"
																			},
																			"nativeSrc": "355:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "355:39:1"
																		},
																		"nativeSrc": "355:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "355:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "302:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "302:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "305:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "305:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "299:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "299:2:1"
																},
																"nativeSrc": "299:13:1",
																"nodeType": "YulFunctionCall",
																"src": "299:13:1"
															},
															"nativeSrc": "291:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "313:19:1",
																"nodeType": "YulBlock",
																"src": "313:19:1",
																"statements": [
																	{
																		"nativeSrc": "315:15:1",
																		"nodeType": "YulAssignment",
																		"src": "315:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "324:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "324:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "327:2:1",
																					"nodeType": "YulLiteral",
																					"src": "327:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "320:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "320:3:1"
																			},
																			"nativeSrc": "320:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "320:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "315:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "315:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "295:3:1",
																"nodeType": "YulBlock",
																"src": "295:3:1",
																"statements": []
															},
															"src": "291:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "424:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "424:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "429:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "420:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "420:3:1"
																		},
																		"nativeSrc": "420:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "420:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "438:1:1",
																		"nodeType": "YulLiteral",
																		"src": "438:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "413:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "413:6:1"
																},
																"nativeSrc": "413:27:1",
																"nodeType": "YulFunctionCall",
																"src": "413:27:1"
															},
															"nativeSrc": "413:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "413:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "196:250:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "240:3:1",
														"nodeType": "YulTypedName",
														"src": "240:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "245:3:1",
														"nodeType": "YulTypedName",
														"src": "245:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "250:6:1",
														"nodeType": "YulTypedName",
														"src": "250:6:1",
														"type": ""
													}
												],
												"src": "196:250:1"
											},
											{
												"body": {
													"nativeSrc": "572:275:1",
													"nodeType": "YulBlock",
													"src": "572:275:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "589:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "589:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "600:2:1",
																		"nodeType": "YulLiteral",
																		"src": "600:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "582:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "582:6:1"
																},
																"nativeSrc": "582:21:1",
																"nodeType": "YulFunctionCall",
																"src": "582:21:1"
															},
															"nativeSrc": "582:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "582:21:1"
														},
														{
															"nativeSrc": "612:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "612:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "632:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "632:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "626:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																},
																"nativeSrc": "626:13:1",
																"nodeType": "YulFunctionCall",
																"src": "626:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "616:6:1",
																	"nodeType": "YulTypedName",
																	"src": "616:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "659:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "659:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "670:2:1",
																				"nodeType": "YulLiteral",
																				"src": "670:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "655:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "655:3:1"
																		},
																		"nativeSrc": "655:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "655:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "675:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "675:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nativeSrc": "648:34:1",
																"nodeType": "YulFunctionCall",
																"src": "648:34:1"
															},
															"nativeSrc": "648:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "648:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "730:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "730:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "738:2:1",
																				"nodeType": "YulLiteral",
																				"src": "738:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "726:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:1"
																		},
																		"nativeSrc": "726:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "726:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "747:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "747:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "758:2:1",
																				"nodeType": "YulLiteral",
																				"src": "758:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "743:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "743:3:1"
																		},
																		"nativeSrc": "743:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "743:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "763:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "763:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "691:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "691:34:1"
																},
																"nativeSrc": "691:79:1",
																"nodeType": "YulFunctionCall",
																"src": "691:79:1"
															},
															"nativeSrc": "691:79:1",
															"nodeType": "YulExpressionStatement",
															"src": "691:79:1"
														},
														{
															"nativeSrc": "779:62:1",
															"nodeType": "YulAssignment",
															"src": "779:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "795:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "795:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "814:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "814:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "822:2:1",
																								"nodeType": "YulLiteral",
																								"src": "822:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "810:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "810:3:1"
																						},
																						"nativeSrc": "810:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "810:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "831:2:1",
																								"nodeType": "YulLiteral",
																								"src": "831:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "827:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "827:3:1"
																						},
																						"nativeSrc": "827:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "827:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "806:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "806:3:1"
																				},
																				"nativeSrc": "806:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "806:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "791:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "791:3:1"
																		},
																		"nativeSrc": "791:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "791:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "838:2:1",
																		"nodeType": "YulLiteral",
																		"src": "838:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "787:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "787:3:1"
																},
																"nativeSrc": "787:54:1",
																"nodeType": "YulFunctionCall",
																"src": "787:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "779:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "779:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "451:396:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "541:9:1",
														"nodeType": "YulTypedName",
														"src": "541:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "552:6:1",
														"nodeType": "YulTypedName",
														"src": "552:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "563:4:1",
														"nodeType": "YulTypedName",
														"src": "563:4:1",
														"type": ""
													}
												],
												"src": "451:396:1"
											},
											{
												"body": {
													"nativeSrc": "901:124:1",
													"nodeType": "YulBlock",
													"src": "901:124:1",
													"statements": [
														{
															"nativeSrc": "911:29:1",
															"nodeType": "YulAssignment",
															"src": "911:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "933:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "933:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "920:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:12:1"
																},
																"nativeSrc": "920:20:1",
																"nodeType": "YulFunctionCall",
																"src": "920:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "911:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "911:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1003:16:1",
																"nodeType": "YulBlock",
																"src": "1003:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1012:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1012:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1015:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1015:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1005:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1005:6:1"
																			},
																			"nativeSrc": "1005:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1005:12:1"
																		},
																		"nativeSrc": "1005:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1005:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "962:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "962:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "973:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "973:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "988:3:1",
																										"nodeType": "YulLiteral",
																										"src": "988:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "993:1:1",
																										"nodeType": "YulLiteral",
																										"src": "993:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "984:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "984:3:1"
																								},
																								"nativeSrc": "984:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "984:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "997:1:1",
																								"nodeType": "YulLiteral",
																								"src": "997:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "980:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "980:3:1"
																						},
																						"nativeSrc": "980:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "980:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "969:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "969:3:1"
																				},
																				"nativeSrc": "969:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "969:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "959:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "959:2:1"
																		},
																		"nativeSrc": "959:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "959:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "952:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:1"
																},
																"nativeSrc": "952:50:1",
																"nodeType": "YulFunctionCall",
																"src": "952:50:1"
															},
															"nativeSrc": "949:70:1",
															"nodeType": "YulIf",
															"src": "949:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "852:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "880:6:1",
														"nodeType": "YulTypedName",
														"src": "880:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "891:5:1",
														"nodeType": "YulTypedName",
														"src": "891:5:1",
														"type": ""
													}
												],
												"src": "852:173:1"
											},
											{
												"body": {
													"nativeSrc": "1100:116:1",
													"nodeType": "YulBlock",
													"src": "1100:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1146:16:1",
																"nodeType": "YulBlock",
																"src": "1146:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1155:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1155:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1158:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1148:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1148:6:1"
																			},
																			"nativeSrc": "1148:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1148:12:1"
																		},
																		"nativeSrc": "1148:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1148:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1121:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1121:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1130:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1130:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1117:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1117:3:1"
																		},
																		"nativeSrc": "1117:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1117:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1142:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1113:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1113:3:1"
																},
																"nativeSrc": "1113:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1113:32:1"
															},
															"nativeSrc": "1110:52:1",
															"nodeType": "YulIf",
															"src": "1110:52:1"
														},
														{
															"nativeSrc": "1171:39:1",
															"nodeType": "YulAssignment",
															"src": "1171:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1200:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1181:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1181:18:1"
																},
																"nativeSrc": "1181:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1181:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1171:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1030:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1066:9:1",
														"nodeType": "YulTypedName",
														"src": "1066:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1077:7:1",
														"nodeType": "YulTypedName",
														"src": "1077:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1089:6:1",
														"nodeType": "YulTypedName",
														"src": "1089:6:1",
														"type": ""
													}
												],
												"src": "1030:186:1"
											},
											{
												"body": {
													"nativeSrc": "1322:102:1",
													"nodeType": "YulBlock",
													"src": "1322:102:1",
													"statements": [
														{
															"nativeSrc": "1332:26:1",
															"nodeType": "YulAssignment",
															"src": "1332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1344:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1344:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1340:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:1"
																},
																"nativeSrc": "1340:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1332:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1374:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1374:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1389:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1389:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1405:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1405:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1410:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1410:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1401:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1401:3:1"
																						},
																						"nativeSrc": "1401:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1401:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1414:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1414:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1397:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1397:3:1"
																				},
																				"nativeSrc": "1397:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1397:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1385:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1385:3:1"
																		},
																		"nativeSrc": "1385:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1385:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1367:6:1"
																},
																"nativeSrc": "1367:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1367:51:1"
															},
															"nativeSrc": "1367:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1367:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1221:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1291:9:1",
														"nodeType": "YulTypedName",
														"src": "1291:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1302:6:1",
														"nodeType": "YulTypedName",
														"src": "1302:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1313:4:1",
														"nodeType": "YulTypedName",
														"src": "1313:4:1",
														"type": ""
													}
												],
												"src": "1221:203:1"
											},
											{
												"body": {
													"nativeSrc": "1580:507:1",
													"nodeType": "YulBlock",
													"src": "1580:507:1",
													"statements": [
														{
															"nativeSrc": "1590:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1590:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1600:2:1",
																"nodeType": "YulLiteral",
																"src": "1600:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1594:2:1",
																	"nodeType": "YulTypedName",
																	"src": "1594:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1611:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1611:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1629:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1629:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1640:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1625:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1625:3:1"
																},
																"nativeSrc": "1625:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1625:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "1615:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1615:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1659:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1659:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1670:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1670:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:21:1"
															},
															"nativeSrc": "1652:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:21:1"
														},
														{
															"nativeSrc": "1682:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:17:1",
															"value": {
																"name": "tail_1",
																"nativeSrc": "1693:6:1",
																"nodeType": "YulIdentifier",
																"src": "1693:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "1686:3:1",
																	"nodeType": "YulTypedName",
																	"src": "1686:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1708:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1708:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1728:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1728:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1722:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1722:5:1"
																},
																"nativeSrc": "1722:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1722:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1712:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1712:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "1751:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1751:6:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1759:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1759:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1744:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:1"
																},
																"nativeSrc": "1744:22:1",
																"nodeType": "YulFunctionCall",
																"src": "1744:22:1"
															},
															"nativeSrc": "1744:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "1744:22:1"
														},
														{
															"nativeSrc": "1775:25:1",
															"nodeType": "YulAssignment",
															"src": "1775:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1786:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1786:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1797:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1797:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1782:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1782:3:1"
																},
																"nativeSrc": "1782:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1782:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1775:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1775:3:1"
																}
															]
														},
														{
															"nativeSrc": "1809:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1809:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1827:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1827:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1835:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1835:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1823:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1823:3:1"
																},
																"nativeSrc": "1823:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1823:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "1813:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1813:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1847:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1847:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1856:1:1",
																"nodeType": "YulLiteral",
																"src": "1856:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1851:1:1",
																	"nodeType": "YulTypedName",
																	"src": "1851:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1915:146:1",
																"nodeType": "YulBlock",
																"src": "1915:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "1936:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1936:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "1951:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "1951:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "1945:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1945:5:1"
																							},
																							"nativeSrc": "1945:13:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1945:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "1968:3:1",
																											"nodeType": "YulLiteral",
																											"src": "1968:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1973:1:1",
																											"nodeType": "YulLiteral",
																											"src": "1973:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "1964:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1964:3:1"
																									},
																									"nativeSrc": "1964:11:1",
																									"nodeType": "YulFunctionCall",
																									"src": "1964:11:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1977:1:1",
																									"nodeType": "YulLiteral",
																									"src": "1977:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "1960:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1960:3:1"
																							},
																							"nativeSrc": "1960:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1960:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1941:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1941:3:1"
																					},
																					"nativeSrc": "1941:39:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1941:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1929:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1929:6:1"
																			},
																			"nativeSrc": "1929:52:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1929:52:1"
																		},
																		"nativeSrc": "1929:52:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1929:52:1"
																	},
																	{
																		"nativeSrc": "1994:19:1",
																		"nodeType": "YulAssignment",
																		"src": "1994:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2005:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2005:3:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2010:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2010:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2001:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2001:3:1"
																			},
																			"nativeSrc": "2001:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2001:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "1994:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1994:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2026:25:1",
																		"nodeType": "YulAssignment",
																		"src": "2026:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2040:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2040:6:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2048:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2048:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2036:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2036:3:1"
																			},
																			"nativeSrc": "2036:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2036:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2026:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2026:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1877:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1877:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1880:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1880:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1874:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1874:2:1"
																},
																"nativeSrc": "1874:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1874:13:1"
															},
															"nativeSrc": "1866:195:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1888:18:1",
																"nodeType": "YulBlock",
																"src": "1888:18:1",
																"statements": [
																	{
																		"nativeSrc": "1890:14:1",
																		"nodeType": "YulAssignment",
																		"src": "1890:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1899:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1899:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1902:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1902:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1895:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1895:3:1"
																			},
																			"nativeSrc": "1895:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1895:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1890:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1890:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1870:3:1",
																"nodeType": "YulBlock",
																"src": "1870:3:1",
																"statements": []
															},
															"src": "1866:195:1"
														},
														{
															"nativeSrc": "2070:11:1",
															"nodeType": "YulAssignment",
															"src": "2070:11:1",
															"value": {
																"name": "pos",
																"nativeSrc": "2078:3:1",
																"nodeType": "YulIdentifier",
																"src": "2078:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2070:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2070:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1429:658:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1549:9:1",
														"nodeType": "YulTypedName",
														"src": "1549:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1560:6:1",
														"nodeType": "YulTypedName",
														"src": "1560:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1571:4:1",
														"nodeType": "YulTypedName",
														"src": "1571:4:1",
														"type": ""
													}
												],
												"src": "1429:658:1"
											},
											{
												"body": {
													"nativeSrc": "2187:92:1",
													"nodeType": "YulBlock",
													"src": "2187:92:1",
													"statements": [
														{
															"nativeSrc": "2197:26:1",
															"nodeType": "YulAssignment",
															"src": "2197:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2209:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2209:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2205:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2205:3:1"
																},
																"nativeSrc": "2205:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2205:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2197:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2197:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2239:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2239:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2264:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2264:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2257:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2257:6:1"
																				},
																				"nativeSrc": "2257:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2257:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2250:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2250:6:1"
																		},
																		"nativeSrc": "2250:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2250:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:1"
																},
																"nativeSrc": "2232:41:1",
																"nodeType": "YulFunctionCall",
																"src": "2232:41:1"
															},
															"nativeSrc": "2232:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "2232:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2092:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2156:9:1",
														"nodeType": "YulTypedName",
														"src": "2156:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2167:6:1",
														"nodeType": "YulTypedName",
														"src": "2167:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2178:4:1",
														"nodeType": "YulTypedName",
														"src": "2178:4:1",
														"type": ""
													}
												],
												"src": "2092:187:1"
											},
											{
												"body": {
													"nativeSrc": "2371:173:1",
													"nodeType": "YulBlock",
													"src": "2371:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2417:16:1",
																"nodeType": "YulBlock",
																"src": "2417:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2426:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2429:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2429:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2419:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2419:6:1"
																			},
																			"nativeSrc": "2419:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2419:12:1"
																		},
																		"nativeSrc": "2419:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2419:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2392:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2392:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2388:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:1"
																		},
																		"nativeSrc": "2388:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2413:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2384:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2384:3:1"
																},
																"nativeSrc": "2384:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2384:32:1"
															},
															"nativeSrc": "2381:52:1",
															"nodeType": "YulIf",
															"src": "2381:52:1"
														},
														{
															"nativeSrc": "2442:39:1",
															"nodeType": "YulAssignment",
															"src": "2442:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2471:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2452:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2452:18:1"
																},
																"nativeSrc": "2452:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2452:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:1"
																}
															]
														},
														{
															"nativeSrc": "2490:48:1",
															"nodeType": "YulAssignment",
															"src": "2490:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2523:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2523:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2534:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2534:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2519:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2519:3:1"
																		},
																		"nativeSrc": "2519:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2519:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2500:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2500:18:1"
																},
																"nativeSrc": "2500:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2500:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2490:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2284:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2329:9:1",
														"nodeType": "YulTypedName",
														"src": "2329:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2340:7:1",
														"nodeType": "YulTypedName",
														"src": "2340:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2352:6:1",
														"nodeType": "YulTypedName",
														"src": "2352:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2360:6:1",
														"nodeType": "YulTypedName",
														"src": "2360:6:1",
														"type": ""
													}
												],
												"src": "2284:260:1"
											},
											{
												"body": {
													"nativeSrc": "2627:199:1",
													"nodeType": "YulBlock",
													"src": "2627:199:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2673:16:1",
																"nodeType": "YulBlock",
																"src": "2673:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2682:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2682:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2685:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2685:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2675:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2675:6:1"
																			},
																			"nativeSrc": "2675:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2675:12:1"
																		},
																		"nativeSrc": "2675:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2675:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2648:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2648:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2657:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2657:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2644:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2644:3:1"
																		},
																		"nativeSrc": "2644:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2644:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2669:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2669:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2640:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2640:3:1"
																},
																"nativeSrc": "2640:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2640:32:1"
															},
															"nativeSrc": "2637:52:1",
															"nodeType": "YulIf",
															"src": "2637:52:1"
														},
														{
															"nativeSrc": "2698:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2698:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2717:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2717:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2711:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2711:5:1"
																},
																"nativeSrc": "2711:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2711:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2702:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2702:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2780:16:1",
																"nodeType": "YulBlock",
																"src": "2780:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2789:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2789:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2792:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2792:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2782:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2782:6:1"
																			},
																			"nativeSrc": "2782:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2782:12:1"
																		},
																		"nativeSrc": "2782:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2782:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2749:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2749:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2770:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2770:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2763:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2763:6:1"
																						},
																						"nativeSrc": "2763:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2763:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2756:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2756:6:1"
																				},
																				"nativeSrc": "2756:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2756:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2746:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2746:2:1"
																		},
																		"nativeSrc": "2746:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2739:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:1"
																},
																"nativeSrc": "2739:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2739:40:1"
															},
															"nativeSrc": "2736:60:1",
															"nodeType": "YulIf",
															"src": "2736:60:1"
														},
														{
															"nativeSrc": "2805:15:1",
															"nodeType": "YulAssignment",
															"src": "2805:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2815:5:1",
																"nodeType": "YulIdentifier",
																"src": "2815:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2805:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2805:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2549:277:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2593:9:1",
														"nodeType": "YulTypedName",
														"src": "2593:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2604:7:1",
														"nodeType": "YulTypedName",
														"src": "2604:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2616:6:1",
														"nodeType": "YulTypedName",
														"src": "2616:6:1",
														"type": ""
													}
												],
												"src": "2549:277:1"
											},
											{
												"body": {
													"nativeSrc": "3061:211:1",
													"nodeType": "YulBlock",
													"src": "3061:211:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3078:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3078:3:1"
																	},
																	{
																		"hexValue": "73797374656d206f6e6c79207820203a783a20",
																		"kind": "string",
																		"nativeSrc": "3083:21:1",
																		"nodeType": "YulLiteral",
																		"src": "3083:21:1",
																		"type": "",
																		"value": "system only x  :x: "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3071:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:1"
																},
																"nativeSrc": "3071:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3071:34:1"
															},
															"nativeSrc": "3071:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3071:34:1"
														},
														{
															"nativeSrc": "3114:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3114:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3134:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3134:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3128:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3128:5:1"
																},
																"nativeSrc": "3128:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3128:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3118:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3118:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3189:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3189:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:4:1",
																				"nodeType": "YulLiteral",
																				"src": "3197:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3185:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:1"
																		},
																		"nativeSrc": "3185:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3185:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3208:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3208:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3213:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3213:2:1",
																				"type": "",
																				"value": "19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3204:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:1"
																		},
																		"nativeSrc": "3204:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3204:12:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3218:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3218:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3150:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "3150:34:1"
																},
																"nativeSrc": "3150:75:1",
																"nodeType": "YulFunctionCall",
																"src": "3150:75:1"
															},
															"nativeSrc": "3150:75:1",
															"nodeType": "YulExpressionStatement",
															"src": "3150:75:1"
														},
														{
															"nativeSrc": "3234:32:1",
															"nodeType": "YulAssignment",
															"src": "3234:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3249:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3249:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3254:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3254:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3245:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3245:3:1"
																		},
																		"nativeSrc": "3245:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3245:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3263:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3263:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:1"
																},
																"nativeSrc": "3241:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3241:25:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3234:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3234:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_a7cd720da15681d3dc7da499391ca9468d6a5d72c6d6b1d85ce3e07632843101_t_string_memory_ptr__to_t_bytes19_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2831:441:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3037:3:1",
														"nodeType": "YulTypedName",
														"src": "3037:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3042:6:1",
														"nodeType": "YulTypedName",
														"src": "3042:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3053:3:1",
														"nodeType": "YulTypedName",
														"src": "3053:3:1",
														"type": ""
													}
												],
												"src": "2831:441:1"
											},
											{
												"body": {
													"nativeSrc": "3309:95:1",
													"nodeType": "YulBlock",
													"src": "3309:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3326:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3326:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3333:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3333:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3338:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3338:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3329:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3329:3:1"
																		},
																		"nativeSrc": "3329:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3329:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3319:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3319:6:1"
																},
																"nativeSrc": "3319:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3319:31:1"
															},
															"nativeSrc": "3319:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3319:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3366:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3366:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3369:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3369:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3359:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3359:6:1"
																},
																"nativeSrc": "3359:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3359:15:1"
															},
															"nativeSrc": "3359:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3359:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3390:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3390:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3393:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3393:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3383:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:1"
																},
																"nativeSrc": "3383:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3383:15:1"
															},
															"nativeSrc": "3383:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3383:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3277:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3277:127:1"
											},
											{
												"body": {
													"nativeSrc": "3461:116:1",
													"nodeType": "YulBlock",
													"src": "3461:116:1",
													"statements": [
														{
															"nativeSrc": "3471:20:1",
															"nodeType": "YulAssignment",
															"src": "3471:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3486:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3486:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3489:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3489:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3482:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3482:3:1"
																},
																"nativeSrc": "3482:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3482:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3471:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3471:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3549:22:1",
																"nodeType": "YulBlock",
																"src": "3549:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3551:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3551:16:1"
																			},
																			"nativeSrc": "3551:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3551:18:1"
																		},
																		"nativeSrc": "3551:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3551:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3520:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "3520:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3513:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3513:6:1"
																				},
																				"nativeSrc": "3513:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3513:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3527:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "3527:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3534:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "3534:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3543:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "3543:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3530:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3530:3:1"
																						},
																						"nativeSrc": "3530:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3530:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3524:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3524:2:1"
																				},
																				"nativeSrc": "3524:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3524:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3510:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3510:2:1"
																		},
																		"nativeSrc": "3510:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3510:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3503:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:1"
																},
																"nativeSrc": "3503:45:1",
																"nodeType": "YulFunctionCall",
																"src": "3503:45:1"
															},
															"nativeSrc": "3500:71:1",
															"nodeType": "YulIf",
															"src": "3500:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3409:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3440:1:1",
														"nodeType": "YulTypedName",
														"src": "3440:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3443:1:1",
														"nodeType": "YulTypedName",
														"src": "3443:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3449:7:1",
														"nodeType": "YulTypedName",
														"src": "3449:7:1",
														"type": ""
													}
												],
												"src": "3409:168:1"
											},
											{
												"body": {
													"nativeSrc": "3630:77:1",
													"nodeType": "YulBlock",
													"src": "3630:77:1",
													"statements": [
														{
															"nativeSrc": "3640:16:1",
															"nodeType": "YulAssignment",
															"src": "3640:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3651:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3651:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3654:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3654:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3647:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3647:3:1"
																},
																"nativeSrc": "3647:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3647:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3640:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3640:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3679:22:1",
																"nodeType": "YulBlock",
																"src": "3679:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3681:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3681:16:1"
																			},
																			"nativeSrc": "3681:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3681:18:1"
																		},
																		"nativeSrc": "3681:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3681:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3671:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3671:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3674:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3674:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3668:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3668:2:1"
																},
																"nativeSrc": "3668:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3668:10:1"
															},
															"nativeSrc": "3665:36:1",
															"nodeType": "YulIf",
															"src": "3665:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3582:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3613:1:1",
														"nodeType": "YulTypedName",
														"src": "3613:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3616:1:1",
														"nodeType": "YulTypedName",
														"src": "3616:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3622:3:1",
														"nodeType": "YulTypedName",
														"src": "3622:3:1",
														"type": ""
													}
												],
												"src": "3582:125:1"
											},
											{
												"body": {
													"nativeSrc": "3744:95:1",
													"nodeType": "YulBlock",
													"src": "3744:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3761:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3761:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3768:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3768:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3773:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3773:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3764:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3764:3:1"
																		},
																		"nativeSrc": "3764:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3764:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3754:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3754:6:1"
																},
																"nativeSrc": "3754:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3754:31:1"
															},
															"nativeSrc": "3754:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3754:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3804:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3794:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3794:6:1"
																},
																"nativeSrc": "3794:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3794:15:1"
															},
															"nativeSrc": "3794:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3794:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3825:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3825:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3828:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3828:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3818:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3818:6:1"
																},
																"nativeSrc": "3818:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3818:15:1"
															},
															"nativeSrc": "3818:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3818:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3712:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3712:127:1"
											},
											{
												"body": {
													"nativeSrc": "3876:95:1",
													"nodeType": "YulBlock",
													"src": "3876:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3893:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3893:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3900:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3900:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3905:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3905:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3896:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:1"
																		},
																		"nativeSrc": "3896:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3896:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3886:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:1"
																},
																"nativeSrc": "3886:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3886:31:1"
															},
															"nativeSrc": "3886:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3886:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3933:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3933:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3936:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3936:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3926:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3926:6:1"
																},
																"nativeSrc": "3926:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3926:15:1"
															},
															"nativeSrc": "3926:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3926:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3957:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3957:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3960:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3960:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3950:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:6:1"
																},
																"nativeSrc": "3950:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:15:1"
															},
															"nativeSrc": "3950:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3950:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3844:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3844:127:1"
											},
											{
												"body": {
													"nativeSrc": "4023:89:1",
													"nodeType": "YulBlock",
													"src": "4023:89:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4050:22:1",
																"nodeType": "YulBlock",
																"src": "4050:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4052:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4052:16:1"
																			},
																			"nativeSrc": "4052:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4052:18:1"
																		},
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4052:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4043:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4043:5:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4036:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:1"
																},
																"nativeSrc": "4036:13:1",
																"nodeType": "YulFunctionCall",
																"src": "4036:13:1"
															},
															"nativeSrc": "4033:39:1",
															"nodeType": "YulIf",
															"src": "4033:39:1"
														},
														{
															"nativeSrc": "4081:25:1",
															"nodeType": "YulAssignment",
															"src": "4081:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4092:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4092:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4103:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4103:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4099:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4099:3:1"
																		},
																		"nativeSrc": "4099:6:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4099:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4088:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4088:3:1"
																},
																"nativeSrc": "4088:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4088:18:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4081:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "3976:136:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4005:5:1",
														"nodeType": "YulTypedName",
														"src": "4005:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4015:3:1",
														"nodeType": "YulTypedName",
														"src": "4015:3:1",
														"type": ""
													}
												],
												"src": "3976:136:1"
											},
											{
												"body": {
													"nativeSrc": "4246:119:1",
													"nodeType": "YulBlock",
													"src": "4246:119:1",
													"statements": [
														{
															"nativeSrc": "4256:26:1",
															"nodeType": "YulAssignment",
															"src": "4256:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4268:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4268:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4279:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4279:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4264:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4264:3:1"
																},
																"nativeSrc": "4264:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4264:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4256:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4256:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4298:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4298:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4309:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4309:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4291:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:1"
																},
																"nativeSrc": "4291:25:1",
																"nodeType": "YulFunctionCall",
																"src": "4291:25:1"
															},
															"nativeSrc": "4291:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "4291:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4336:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4347:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4347:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4332:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:1"
																		},
																		"nativeSrc": "4332:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4332:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4352:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4352:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4325:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4325:6:1"
																},
																"nativeSrc": "4325:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4325:34:1"
															},
															"nativeSrc": "4325:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4325:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4117:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4207:9:1",
														"nodeType": "YulTypedName",
														"src": "4207:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4218:6:1",
														"nodeType": "YulTypedName",
														"src": "4218:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4226:6:1",
														"nodeType": "YulTypedName",
														"src": "4226:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4237:4:1",
														"nodeType": "YulTypedName",
														"src": "4237:4:1",
														"type": ""
													}
												],
												"src": "4117:248:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a7cd720da15681d3dc7da499391ca9468d6a5d72c6d6b1d85ce3e07632843101_t_string_memory_ptr__to_t_bytes19_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"system only x  :x: \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 19), length)\n        end := add(add(pos, length), 19)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80637ab7be411161005b5780637ab7be411461010e578063906f634314610123578063bd1b221014610136578063e5bc301e1461017257600080fd5b80630d8e6e2c1461008257806317d7de7c14610096578063783db809146100ca575b600080fd5b604051600181526020015b60405180910390f35b6040805180820182526012815271424b535f4449524543544f52595f434f524560701b6020820152905161008d9190610573565b6100f66100d83660046105c2565b6001600160a01b039081166000908152600460205260409020541690565b6040516001600160a01b03909116815260200161008d565b610116610185565b60405161008d91906105e4565b6101166101313660046105c2565b6101e7565b6101626101443660046105c2565b6001600160a01b031660009081526003602052604090205460ff1690565b604051901515815260200161008d565b610162610180366004610631565b61025d565b606060028054806020026020016040519081016040528092919081815260200182805480156101dd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101bf575b5050505050905090565b6001600160a01b03811660009081526005602090815260409182902080548351818402810184019094528084526060939283018282801561025157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610233575b50505050509050919050565b6001546040516317cf63dd60e11b81523360048201526000916001600160a01b031690632f9ec7ba90602401602060405180830381865afa1580156102a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ca9190610664565b6102d3336103be565b6040516020016102e39190610686565b604051602081830303815290604052906103195760405162461bcd60e51b81526004016103109190610573565b60405180910390fd5b50506002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b038086166001600160a01b031992831681179093556000838152600360209081526040808320805460ff19168817905560048252808320805494891694861685179055928252600581529181208054808701825590825291902001805490911690911790555b92915050565b60606103b86001600160a01b038316601460608260006103df8460026106d7565b6103ea9060026106ee565b67ffffffffffffffff81111561040257610402610701565b6040519080825280601f01601f19166020018201604052801561042c576020820181803683370190505b509050600360fc1b8160008151811061044757610447610717565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061047657610476610717565b60200101906001600160f81b031916908160001a905350600061049a8560026106d7565b6104a59060016106ee565b90505b600181111561051d576f181899199a1a9b1b9c1cb0b131b232b360811b83600f16601081106104d9576104d9610717565b1a60f81b8282815181106104ef576104ef610717565b60200101906001600160f81b031916908160001a90535060049290921c916105168161072d565b90506104a8565b5081156105475760405163e22e27eb60e01b81526004810186905260248101859052604401610310565b949350505050565b60005b8381101561056a578181015183820152602001610552565b50506000910152565b602081526000825180602084015261059281604085016020870161054f565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146105bd57600080fd5b919050565b6000602082840312156105d457600080fd5b6105dd826105a6565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156106255783516001600160a01b031683529284019291840191600101610600565b50909695505050505050565b6000806040838503121561064457600080fd5b61064d836105a6565b915061065b602084016105a6565b90509250929050565b60006020828403121561067657600080fd5b815180151581146105dd57600080fd5b72039bcb9ba32b69037b7363c903c10101d3c1d1606d1b8152600082516106b481601385016020870161054f565b9190910160130192915050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103b8576103b86106c1565b808201808211156103b8576103b86106c1565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161073c5761073c6106c1565b50600019019056fea264697066735822122075563f1af22f9a370ae59d526d95a72f0d5e52931fef50e48145f7d13df6801564736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7AB7BE41 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7AB7BE41 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x906F6343 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xBD1B2210 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE5BC301E EQ PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x783DB809 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x424B535F4449524543544F52595F434F5245 PUSH1 0x70 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x573 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0xD8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8D JUMP JUMPDEST PUSH2 0x116 PUSH2 0x185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8D JUMP JUMPDEST PUSH2 0x162 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x233 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17CF63DD PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2F9EC7BA SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x2D3 CALLER PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x319 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP9 OR SWAP1 SSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP5 DUP10 AND SWAP5 DUP7 AND DUP6 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD DUP1 DUP8 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3B8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 PUSH1 0x60 DUP3 PUSH1 0x0 PUSH2 0x3DF DUP5 PUSH1 0x2 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x3EA SWAP1 PUSH1 0x2 PUSH2 0x6EE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x447 JUMPI PUSH2 0x447 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x476 JUMPI PUSH2 0x476 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x49A DUP6 PUSH1 0x2 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x4A5 SWAP1 PUSH1 0x1 PUSH2 0x6EE JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x51D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP4 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x4D9 JUMPI PUSH2 0x4D9 PUSH2 0x717 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4EF JUMPI PUSH2 0x4EF PUSH2 0x717 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH2 0x516 DUP2 PUSH2 0x72D JUMP JUMPDEST SWAP1 POP PUSH2 0x4A8 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x547 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE22E27EB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x310 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x56A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x552 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x592 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x54F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DD DUP3 PUSH2 0x5A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x600 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64D DUP4 PUSH2 0x5A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x65B PUSH1 0x20 DUP5 ADD PUSH2 0x5A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH19 0x39BCB9BA32B69037B7363C903C10101D3C1D1 PUSH1 0x6D SHL DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x6B4 DUP2 PUSH1 0x13 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x54F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x13 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0x6C1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0x6C1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x6C1 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x563F1AF22F9A370AE59D526D95A72F0D5E52931FEF50 0xE4 DUP2 GASLIMIT 0xF7 0xD1 RETURNDATASIZE 0xF6 DUP1 ISZERO PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "23512:1427:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24001:94;;;23654:1;160:25:1;;148:2;133:18;24001:94:0;;;;;;;;23905:91;23984:4;;;;;;;;;;;-1:-1:-1;;;23984:4:0;;;;23905:91;;;;23984:4;23905:91;:::i;24220:130::-;;;;;;:::i;:::-;-1:-1:-1;;;;;24319:24:0;;;24286:14;24319:24;;;:14;:24;;;;;;;;24220:130;;;;-1:-1:-1;;;;;1385:32:1;;;1367:51;;1355:2;1340:18;24220:130:0;1221:203:1;24101:113:0;;;:::i;:::-;;;;;;;:::i;24356:139::-;;;;;;:::i;:::-;;:::i;24501:132::-;;;;;;:::i;:::-;-1:-1:-1;;;;;24601:25:0;24565:18;24601:25;;;:15;:25;;;;;;;;;24501:132;;;;2257:14:1;;2250:22;2232:41;;2220:2;2205:18;24501:132:0;2092:187:1;24639:296:0;;;;;;:::i;:::-;;:::i;24101:113::-;24151:28;24197:9;24190:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24190:16:0;;;;;;;;;;;;;;;;;;;;;;;24101:113;:::o;24356:139::-;-1:-1:-1;;;;;24464:24:0;;;;;;:16;:24;;;;;;;;;24457:31;;;;;;;;;;;;;;;;;24417:28;;24457:31;;;24464:24;24457:31;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24457:31:0;;;;;;;;;;;;;;;;;;;;;;;24356:139;;;:::o;24639:296::-;22339:8;;:36;;-1:-1:-1;;;22339:36:0;;22364:10;22339:36;;;1367:51:1;24725:11:0;;-1:-1:-1;;;;;22339:8:0;;:24;;1340:18:1;;22339:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22412:24;:10;:22;:24::i;:::-;22376:61;;;;;;;;:::i;:::-;;;;;;;;;;;;;22331:107;;;;;-1:-1:-1;;;22331:107:0;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;24747:9:0::1;:24:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;24747:24:0;;::::1;-1:-1:-1::0;;;;;;24747:24:0;;::::1;::::0;::::1;::::0;;;-1:-1:-1;24781:25:0;;;:15:::1;24747:24;24781:25:::0;;;;;;;:32;;-1:-1:-1;;24781:32:0::1;::::0;::::1;::::0;;24824:14:::1;:24:::0;;;;;:33;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;24868:24;;;:16:::1;:24:::0;;;;;:39;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;22448:1:::1;24639:296:::0;;;;:::o;19060:148::-;19118:13;19150:51;-1:-1:-1;;;;;19162:22:0;;16746:2;18451:13;18497:5;18476:18;18544:10;18548:6;18544:1;:10;:::i;:::-;:14;;18557:1;18544:14;:::i;:::-;18534:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18534:25:0;;18512:47;;-1:-1:-1;;;18569:6:0;18576:1;18569:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;18569:15:0;;;;;;;;;-1:-1:-1;;;18594:6:0;18601:1;18594:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;18594:15:0;;;;;;;;-1:-1:-1;18624:9:0;18636:10;18640:6;18636:1;:10;:::i;:::-;:14;;18649:1;18636:14;:::i;:::-;18624:26;;18619:140;18656:1;18652;:5;18619:140;;;-1:-1:-1;;;18701:10:0;18714:3;18701:16;18690:28;;;;;;;:::i;:::-;;;;18678:6;18685:1;18678:9;;;;;;;;:::i;:::-;;;;:40;-1:-1:-1;;;;;18678:40:0;;;;;;;;-1:-1:-1;18747:1:0;18732:16;;;;;18659:3;;;:::i;:::-;;;18619:140;;;-1:-1:-1;18772:15:0;;18768:96;;18810:43;;-1:-1:-1;;;18810:43:0;;;;;4291:25:1;;;4332:18;;;4325:34;;;4264:18;;18810:43:0;4117:248:1;18768:96:0;18887:6;18376:525;-1:-1:-1;;;;18376:525:0:o;196:250:1:-;281:1;291:113;305:6;302:1;299:13;291:113;;;381:11;;;375:18;362:11;;;355:39;327:2;320:10;291:113;;;-1:-1:-1;;438:1:1;420:16;;413:27;196:250::o;451:396::-;600:2;589:9;582:21;563:4;632:6;626:13;675:6;670:2;659:9;655:18;648:34;691:79;763:6;758:2;747:9;743:18;738:2;730:6;726:15;691:79;:::i;:::-;831:2;810:15;-1:-1:-1;;806:29:1;791:45;;;;838:2;787:54;;451:396;-1:-1:-1;;451:396:1:o;852:173::-;920:20;;-1:-1:-1;;;;;969:31:1;;959:42;;949:70;;1015:1;1012;1005:12;949:70;852:173;;;:::o;1030:186::-;1089:6;1142:2;1130:9;1121:7;1117:23;1113:32;1110:52;;;1158:1;1155;1148:12;1110:52;1181:29;1200:9;1181:29;:::i;:::-;1171:39;1030:186;-1:-1:-1;;;1030:186:1:o;1429:658::-;1600:2;1652:21;;;1722:13;;1625:18;;;1744:22;;;1571:4;;1600:2;1823:15;;;;1797:2;1782:18;;;1571:4;1866:195;1880:6;1877:1;1874:13;1866:195;;;1945:13;;-1:-1:-1;;;;;1941:39:1;1929:52;;2036:15;;;;2001:12;;;;1977:1;1895:9;1866:195;;;-1:-1:-1;2078:3:1;;1429:658;-1:-1:-1;;;;;;1429:658:1:o;2284:260::-;2352:6;2360;2413:2;2401:9;2392:7;2388:23;2384:32;2381:52;;;2429:1;2426;2419:12;2381:52;2452:29;2471:9;2452:29;:::i;:::-;2442:39;;2500:38;2534:2;2523:9;2519:18;2500:38;:::i;:::-;2490:48;;2284:260;;;;;:::o;2549:277::-;2616:6;2669:2;2657:9;2648:7;2644:23;2640:32;2637:52;;;2685:1;2682;2675:12;2637:52;2717:9;2711:16;2770:5;2763:13;2756:21;2749:5;2746:32;2736:60;;2792:1;2789;2782:12;2831:441;-1:-1:-1;;;3078:3:1;3071:34;3053:3;3134:6;3128:13;3150:75;3218:6;3213:2;3208:3;3204:12;3197:4;3189:6;3185:17;3150:75;:::i;:::-;3245:16;;;;3263:2;3241:25;;2831:441;-1:-1:-1;;2831:441:1:o;3277:127::-;3338:10;3333:3;3329:20;3326:1;3319:31;3369:4;3366:1;3359:15;3393:4;3390:1;3383:15;3409:168;3482:9;;;3513;;3530:15;;;3524:22;;3510:37;3500:71;;3551:18;;:::i;3582:125::-;3647:9;;;3668:10;;;3665:36;;;3681:18;;:::i;3712:127::-;3773:10;3768:3;3764:20;3761:1;3754:31;3804:4;3801:1;3794:15;3828:4;3825:1;3818:15;3844:127;3905:10;3900:3;3896:20;3893:1;3886:31;3936:4;3933:1;3926:15;3960:4;3957:1;3950:15;3976:136;4015:3;4043:5;4033:39;;4052:18;;:::i;:::-;-1:-1:-1;;;4088:18:1;;3976:136::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "382800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addBKSAddress(address,address)": "infinite",
								"getAddressOwner(address)": "2612",
								"getAddresses(address)": "infinite",
								"getBKSAddresses()": "infinite",
								"getName()": "infinite",
								"getVersion()": "167",
								"isBKSAddress(address)": "2593"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23512,
									"end": 24939,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 23833,
									"end": 23899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 23833,
									"end": 23899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22928,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22920,
									"end": 22960,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23512,
									"end": 24939,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122075563f1af22f9a370ae59d526d95a72f0d5e52931fef50e48145f7d13df6801564736f6c63430008160033",
									".code": [
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "7AB7BE41"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "7AB7BE41"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "906F6343"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "BD1B2210"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "E5BC301E"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "D8E6E2C"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "17D7DE7C"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "783DB809"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 24939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23654,
											"end": 23655,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24001,
											"end": 24095,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23905,
											"end": 23996,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23905,
											"end": 23996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "424B535F4449524543544F52595F434F5245"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23905,
											"end": 23996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23905,
											"end": 23996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23905,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23905,
											"end": 23996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23984,
											"end": 23988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23905,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23905,
											"end": 23996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24220,
											"end": 24350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 24300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24319,
											"end": 24333,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24319,
											"end": 24343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24220,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1221,
											"end": 1424,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24101,
											"end": 24214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24101,
											"end": 24214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24356,
											"end": 24495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24356,
											"end": 24495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24501,
											"end": 24633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24565,
											"end": 24583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24616,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2273,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24501,
											"end": 24633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2092,
											"end": 2279,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24639,
											"end": 24935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24639,
											"end": 24935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24151,
											"end": 24179,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24197,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24190,
											"end": 24206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24101,
											"end": 24214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24480,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24417,
											"end": 24445,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24417,
											"end": 24445,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24464,
											"end": 24488,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24457,
											"end": 24488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24356,
											"end": 24495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22339,
											"end": 22347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17CF63DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22364,
											"end": 22374,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24725,
											"end": 24736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24725,
											"end": 24736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22339,
											"end": 22347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22363,
											"name": "PUSH",
											"source": 0,
											"value": "2F9EC7BA"
										},
										{
											"begin": 22339,
											"end": 22363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 22339,
											"end": 22375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22339,
											"end": 22375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22412,
											"end": 22436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22412,
											"end": 22422,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22412,
											"end": 22434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22412,
											"end": 22436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22412,
											"end": 22436,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22412,
											"end": 22436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 22376,
											"end": 22437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22376,
											"end": 22437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22331,
											"end": 22438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22331,
											"end": 22438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24747,
											"end": 24756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "PUSH",
											"source": 0,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 24747,
											"end": 24771,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24747,
											"end": 24771,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24781,
											"end": 24806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24747,
											"end": 24771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24781,
											"end": 24806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24781,
											"end": 24806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24781,
											"end": 24813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24813,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24813,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24781,
											"end": 24813,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24824,
											"end": 24848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24848,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24857,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24892,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24868,
											"end": 24892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24892,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24868,
											"end": 24907,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22448,
											"end": 22449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22448,
											"end": 22449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 24935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19060,
											"end": 19208,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19060,
											"end": 19208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19118,
											"end": 19131,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19150,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19162,
											"end": 19184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19162,
											"end": 19184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16748,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 18451,
											"end": 18464,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18497,
											"end": 18502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18476,
											"end": 18494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18544,
											"end": 18554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 18548,
											"end": 18554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18545,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18544,
											"end": 18554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18544,
											"end": 18554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18554,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 18544,
											"end": 18554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 18544,
											"end": 18558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18557,
											"end": 18558,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18544,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 18544,
											"end": 18558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18558,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 18544,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 18534,
											"end": 18559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18534,
											"end": 18559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18569,
											"end": 18575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18576,
											"end": 18577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 18569,
											"end": 18578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18569,
											"end": 18584,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18569,
											"end": 18584,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18584,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 18569,
											"end": 18584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18594,
											"end": 18600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18601,
											"end": 18602,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 18594,
											"end": 18603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18594,
											"end": 18609,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18594,
											"end": 18609,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18609,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18624,
											"end": 18633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18636,
											"end": 18646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18640,
											"end": 18646,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18636,
											"end": 18637,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18636,
											"end": 18646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18636,
											"end": 18646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18636,
											"end": 18646,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18636,
											"end": 18646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18636,
											"end": 18650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 18636,
											"end": 18650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18649,
											"end": 18650,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18636,
											"end": 18650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 18636,
											"end": 18650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18636,
											"end": 18650,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 18636,
											"end": 18650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18624,
											"end": 18650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18624,
											"end": 18650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18619,
											"end": 18759,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 18619,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18656,
											"end": 18657,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18652,
											"end": 18653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18652,
											"end": 18657,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18619,
											"end": 18759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18619,
											"end": 18759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18619,
											"end": 18759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18701,
											"end": 18711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18714,
											"end": 18717,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 18701,
											"end": 18717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 18690,
											"end": 18718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 18690,
											"end": 18718,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 18678,
											"end": 18687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18678,
											"end": 18718,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18678,
											"end": 18718,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18718,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18747,
											"end": 18748,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18732,
											"end": 18748,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18732,
											"end": 18748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18732,
											"end": 18748,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18732,
											"end": 18748,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 18732,
											"end": 18748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18659,
											"end": 18662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18659,
											"end": 18662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18659,
											"end": 18662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 18659,
											"end": 18662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18659,
											"end": 18662,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 18659,
											"end": 18662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18659,
											"end": 18662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18659,
											"end": 18662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18619,
											"end": 18759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 18619,
											"end": 18759,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18619,
											"end": 18759,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 18619,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18772,
											"end": 18787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18772,
											"end": 18787,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18768,
											"end": 18864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 18768,
											"end": 18864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18810,
											"end": 18853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E22E27EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18810,
											"end": 18853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18810,
											"end": 18853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18810,
											"end": 18853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4291,
											"end": 4316,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4291,
											"end": 4316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4291,
											"end": 4316,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4359,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4264,
											"end": 4282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18810,
											"end": 18853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4117,
											"end": 4365,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18768,
											"end": 18864,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 18768,
											"end": 18864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18887,
											"end": 18893,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18376,
											"end": 18901,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18376,
											"end": 18901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 196,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 404,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 291,
											"end": 404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 311,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 302,
											"end": 303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 299,
											"end": 312,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 291,
											"end": 404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 291,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 291,
											"end": 404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 381,
											"end": 392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 381,
											"end": 392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 381,
											"end": 392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 375,
											"end": 393,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 362,
											"end": 373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 362,
											"end": 373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 362,
											"end": 373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 355,
											"end": 394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 320,
											"end": 330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 291,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 291,
											"end": 404,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 291,
											"end": 404,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 291,
											"end": 404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 438,
											"end": 439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 420,
											"end": 436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 413,
											"end": 440,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 196,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 847,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 451,
											"end": 847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 600,
											"end": 602,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 563,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 626,
											"end": 639,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 672,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 668,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 655,
											"end": 673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 648,
											"end": 682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 691,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 763,
											"end": 769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 756,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 743,
											"end": 761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 738,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 736,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 726,
											"end": 741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 691,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 691,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 770,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 691,
											"end": 770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 831,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 810,
											"end": 825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 806,
											"end": 835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 791,
											"end": 836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 791,
											"end": 836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 791,
											"end": 836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 791,
											"end": 836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 838,
											"end": 840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 841,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 451,
											"end": 847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 451,
											"end": 847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1025,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 852,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 920,
											"end": 940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 920,
											"end": 940,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 969,
											"end": 1000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1000,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1001,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 949,
											"end": 1019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 949,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 1025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1216,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1030,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1145,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1110,
											"end": 1162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1160,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1162,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1110,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1200,
											"end": 1209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1181,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1210,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1030,
											"end": 1216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 2087,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1429,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1602,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1800,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1575,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1866,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1887,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 2061,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1866,
											"end": 2061,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1958,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 1980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1981,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2013,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1895,
											"end": 1904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1866,
											"end": 2061,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1866,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2078,
											"end": 2081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2081,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 2087,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1429,
											"end": 2087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2416,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2431,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2452,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2534,
											"end": 2536,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2532,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2500,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2500,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2826,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2549,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2667,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2689,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2637,
											"end": 2689,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2687,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2637,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2776,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2777,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2736,
											"end": 2796,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2794,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 3272,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2831,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39BCB9BA32B69037B7363C903C10101D3C1D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3078,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3141,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3215,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3208,
											"end": 3211,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3150,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3225,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3150,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3241,
											"end": 3266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3266,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 3272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 3272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3404,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3277,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3333,
											"end": 3336,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3329,
											"end": 3349,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3373,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3366,
											"end": 3367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3397,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3398,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3577,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3409,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3547,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3500,
											"end": 3571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3551,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3707,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3582,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3678,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3701,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3665,
											"end": 3701,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3681,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3681,
											"end": 3699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3712,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3768,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3801,
											"end": 3802,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3794,
											"end": 3809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3825,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3833,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3971,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3844,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3900,
											"end": 3903,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3896,
											"end": 3916,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3940,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3964,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3965,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4112,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3976,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4033,
											"end": 4072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4052,
											"end": 4070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4088,
											"end": 4106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/core/system/flattened/BKSDirectory_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addBKSAddress(address,address)": "e5bc301e",
							"getAddressOwner(address)": "783db809",
							"getAddresses(address)": "906f6343",
							"getBKSAddresses()": "7ab7be41",
							"getName()": "17d7de7c",
							"getVersion()": "0d8e6e2c",
							"isBKSAddress(address)": "bd1b2210"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addBKSAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_added\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAddressOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBKSAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_version\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isBKSAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_isBKSAddress\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"cryptotwilight\",\"custom:buidl\":\"at Buidl Up 2023 https://www.buidlbox.io\",\"custom:contact\":\"@blockstarlogic1 (Twitter)\",\"details\":\"This is the Directory implementation for the Black Sock decentralized social protocol \",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"Black Sock - Directory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":\"BKSDirectory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":{\"keccak256\":\"0x037b2bbb7f35ac7395b5ec45bf1658074a1d914efada7b138b51d8ed635b0f23\",\"urls\":[\"bzz-raw://651de22d80cf5a24aabc6b4a0d475d322c9b45ebaae193b5f34b77af66541889\",\"dweb:/ipfs/Qmf5G2boXsWDA3BediCWP6sMW3VtmbmAenGwPb1jxqhnCN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1506,
								"contract": "contracts/core/system/flattened/BKSDirectory_flattened.sol:BKSDirectory",
								"label": "index",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1579,
								"contract": "contracts/core/system/flattened/BKSDirectory_flattened.sol:BKSDirectory",
								"label": "register",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IBKSOpsRegister)1478"
							},
							{
								"astId": 1620,
								"contract": "contracts/core/system/flattened/BKSDirectory_flattened.sol:BKSDirectory",
								"label": "addresses",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1624,
								"contract": "contracts/core/system/flattened/BKSDirectory_flattened.sol:BKSDirectory",
								"label": "knownBKSAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1628,
								"contract": "contracts/core/system/flattened/BKSDirectory_flattened.sol:BKSDirectory",
								"label": "ownerByAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1633,
								"contract": "contracts/core/system/flattened/BKSDirectory_flattened.sol:BKSDirectory",
								"label": "addressesByOwner",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBKSOpsRegister)1478": {
								"encoding": "inplace",
								"label": "contract IBKSOpsRegister",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"BKSSystemContract": {
					"abi": [
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_version",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "cryptotwilight",
						"custom:buidl": "Buidl Up 2023 https://www.buidlbox.io",
						"custom:contact": "@blockstarlogic1 (Twitter)",
						"details": "This is the super contract for system contracts in the Black Sock decentralized social protocol",
						"kind": "dev",
						"methods": {},
						"title": "Black Sock - System Contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getName()": "17d7de7c",
							"getVersion()": "0d8e6e2c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_version\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"cryptotwilight\",\"custom:buidl\":\"Buidl Up 2023 https://www.buidlbox.io\",\"custom:contact\":\"@blockstarlogic1 (Twitter)\",\"details\":\"This is the super contract for system contracts in the Black Sock decentralized social protocol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Black Sock - System Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":\"BKSSystemContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":{\"keccak256\":\"0x037b2bbb7f35ac7395b5ec45bf1658074a1d914efada7b138b51d8ed635b0f23\",\"urls\":[\"bzz-raw://651de22d80cf5a24aabc6b4a0d475d322c9b45ebaae193b5f34b77af66541889\",\"dweb:/ipfs/Qmf5G2boXsWDA3BediCWP6sMW3VtmbmAenGwPb1jxqhnCN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1506,
								"contract": "contracts/core/system/flattened/BKSDirectory_flattened.sol:BKSSystemContract",
								"label": "index",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1579,
								"contract": "contracts/core/system/flattened/BKSDirectory_flattened.sol:BKSSystemContract",
								"label": "register",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IBKSOpsRegister)1478"
							}
						],
						"types": {
							"t_contract(IBKSOpsRegister)1478": {
								"encoding": "inplace",
								"label": "contract IBKSOpsRegister",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBKSDirectory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_userOwner",
									"type": "address"
								}
							],
							"name": "addBKSAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_added",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getAddressOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBKSAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isBKSAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_isBKSAddress",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "cryptotwilight",
						"custom:buidl": "at Buidl Up 2023 https://www.buidlbox.io",
						"custom:contact": "@blockstarlogic1 (Twitter)",
						"details": "This is the directory used to keep track of all user generated addresses in the Black Sock decentralized protocol ",
						"kind": "dev",
						"methods": {},
						"title": "Black Sock - Directory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addBKSAddress(address,address)": "e5bc301e",
							"getAddressOwner(address)": "783db809",
							"getBKSAddresses()": "7ab7be41",
							"isBKSAddress(address)": "bd1b2210"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_userOwner\",\"type\":\"address\"}],\"name\":\"addBKSAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_added\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAddressOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBKSAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isBKSAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_isBKSAddress\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"cryptotwilight\",\"custom:buidl\":\"at Buidl Up 2023 https://www.buidlbox.io\",\"custom:contact\":\"@blockstarlogic1 (Twitter)\",\"details\":\"This is the directory used to keep track of all user generated addresses in the Black Sock decentralized protocol \",\"kind\":\"dev\",\"methods\":{},\"title\":\"Black Sock - Directory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":\"IBKSDirectory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":{\"keccak256\":\"0x037b2bbb7f35ac7395b5ec45bf1658074a1d914efada7b138b51d8ed635b0f23\",\"urls\":[\"bzz-raw://651de22d80cf5a24aabc6b4a0d475d322c9b45ebaae193b5f34b77af66541889\",\"dweb:/ipfs/Qmf5G2boXsWDA3BediCWP6sMW3VtmbmAenGwPb1jxqhnCN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBKSOpsRegister": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddresses",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "_name",
									"type": "string[]"
								},
								{
									"internalType": "address[]",
									"name": "_address",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNames",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "_names",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isSystemAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_isSystemAddress",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "cryptotwilight",
						"custom:buidl": "at Buidl Up 2023 https://www.buidlbox.io",
						"custom:contact": "@blockstarlogic1 (Twitter)",
						"details": "This is the Operations Register that is used to keep track of all system level contracts in the Black Sock decentralized social protocol ",
						"kind": "dev",
						"methods": {},
						"title": "Black Sock - Operations Register ",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(string)": "bf40fac1",
							"getAddresses()": "a39fac12",
							"getName(address)": "5fd4b08a",
							"getNames()": "cd838f0f",
							"isSystemAddress(address)": "2f9ec7ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_name\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_names\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isSystemAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_isSystemAddress\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"cryptotwilight\",\"custom:buidl\":\"at Buidl Up 2023 https://www.buidlbox.io\",\"custom:contact\":\"@blockstarlogic1 (Twitter)\",\"details\":\"This is the Operations Register that is used to keep track of all system level contracts in the Black Sock decentralized social protocol \",\"kind\":\"dev\",\"methods\":{},\"title\":\"Black Sock - Operations Register \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":\"IBKSOpsRegister\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":{\"keccak256\":\"0x037b2bbb7f35ac7395b5ec45bf1658074a1d914efada7b138b51d8ed635b0f23\",\"urls\":[\"bzz-raw://651de22d80cf5a24aabc6b4a0d475d322c9b45ebaae193b5f34b77af66541889\",\"dweb:/ipfs/Qmf5G2boXsWDA3BediCWP6sMW3VtmbmAenGwPb1jxqhnCN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBKSVersion": {
					"abi": [
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_version",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "cryptotwilight",
						"custom:buidl": "Buidl Up 2023 https://www.buidlbox.io",
						"custom:contact": "@blockstarlogic1 (Twitter)",
						"details": "This is the versioning and introspection interface used by the Black Sock decentralized social protocol",
						"kind": "dev",
						"methods": {},
						"title": "Black Sock - Version",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getName()": "17d7de7c",
							"getVersion()": "0d8e6e2c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_version\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"cryptotwilight\",\"custom:buidl\":\"Buidl Up 2023 https://www.buidlbox.io\",\"custom:contact\":\"@blockstarlogic1 (Twitter)\",\"details\":\"This is the versioning and introspection interface used by the Black Sock decentralized social protocol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Black Sock - Version\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":\"IBKSVersion\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":{\"keccak256\":\"0x037b2bbb7f35ac7395b5ec45bf1658074a1d914efada7b138b51d8ed635b0f23\",\"urls\":[\"bzz-raw://651de22d80cf5a24aabc6b4a0d475d322c9b45ebaae193b5f34b77af66541889\",\"dweb:/ipfs/Qmf5G2boXsWDA3BediCWP6sMW3VtmbmAenGwPb1jxqhnCN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":1521:16435  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":1521:16435  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220116c281c2d98f410fb23ffac264d7e8fdbe051dd07b1c0e053d12cf0038b9ea564736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220116c281c2d98f410fb23ffac264d7e8fdbe051dd07b1c0e053d12cf0038b9ea564736f6c63430008160033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH13 0x281C2D98F410FB23FFAC264D7E DUP16 0xDB 0xE0 MLOAD 0xDD SMOD 0xB1 0xC0 0xE0 MSTORE8 0xD1 0x2C CREATE SUB DUP12 SWAP15 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1521:14914:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1521:14914:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220116c281c2d98f410fb23ffac264d7e8fdbe051dd07b1c0e053d12cf0038b9ea564736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH13 0x281C2D98F410FB23FFAC264D7E DUP16 0xDB 0xE0 MLOAD 0xDD SMOD 0xB1 0xC0 0xE0 MSTORE8 0xD1 0x2C CREATE SUB DUP12 SWAP15 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1521:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 16435,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220116c281c2d98f410fb23ffac264d7e8fdbe051dd07b1c0e053d12cf0038b9ea564736f6c63430008160033",
									".code": [
										{
											"begin": 1521,
											"end": 16435,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1521,
											"end": 16435,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1521,
											"end": 16435,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1521,
											"end": 16435,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1521,
											"end": 16435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 16435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1521,
											"end": 16435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 16435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1521,
											"end": 16435,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/core/system/flattened/BKSDirectory_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":{\"keccak256\":\"0x037b2bbb7f35ac7395b5ec45bf1658074a1d914efada7b138b51d8ed635b0f23\",\"urls\":[\"bzz-raw://651de22d80cf5a24aabc6b4a0d475d322c9b45ebaae193b5f34b77af66541889\",\"dweb:/ipfs/Qmf5G2boXsWDA3BediCWP6sMW3VtmbmAenGwPb1jxqhnCN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":246:1293  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":246:1293  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122052f071855f4056fe0a8d140807a00c05231188cdab1fef28645da09a332c7a1464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052f071855f4056fe0a8d140807a00c05231188cdab1fef28645da09a332c7a1464736f6c63430008160033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE CREATE PUSH18 0x855F4056FE0A8D140807A00C05231188CDAB 0x1F 0xEF 0x28 PUSH5 0x5DA09A332C PUSH27 0x1464736F6C63430008160033000000000000000000000000000000 ",
							"sourceMap": "246:1047:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;246:1047:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052f071855f4056fe0a8d140807a00c05231188cdab1fef28645da09a332c7a1464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE CREATE PUSH18 0x855F4056FE0A8D140807A00C05231188CDAB 0x1F 0xEF 0x28 PUSH5 0x5DA09A332C PUSH27 0x1464736F6C63430008160033000000000000000000000000000000 ",
							"sourceMap": "246:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 246,
									"end": 1293,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052f071855f4056fe0a8d140807a00c05231188cdab1fef28645da09a332c7a1464736f6c63430008160033",
									".code": [
										{
											"begin": 246,
											"end": 1293,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 246,
											"end": 1293,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 246,
											"end": 1293,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 246,
											"end": 1293,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 246,
											"end": 1293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 1293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 246,
											"end": 1293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 1293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 1293,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/core/system/flattened/BKSDirectory_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":{\"keccak256\":\"0x037b2bbb7f35ac7395b5ec45bf1658074a1d914efada7b138b51d8ed635b0f23\",\"urls\":[\"bzz-raw://651de22d80cf5a24aabc6b4a0d475d322c9b45ebaae193b5f34b77af66541889\",\"dweb:/ipfs/Qmf5G2boXsWDA3BediCWP6sMW3VtmbmAenGwPb1jxqhnCN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":16622:19469  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/system/flattened/BKSDirectory_flattened.sol\":16622:19469  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220417883f88654137dcd442b15cbb4e3c14d01c974e9c0e640eac01165f6f4addd64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220417883f88654137dcd442b15cbb4e3c14d01c974e9c0e640eac01165f6f4addd64736f6c63430008160033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PUSH25 0x83F88654137DCD442B15CBB4E3C14D01C974E9C0E640EAC011 PUSH6 0xF6F4ADDD6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "16622:2847:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;16622:2847:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220417883f88654137dcd442b15cbb4e3c14d01c974e9c0e640eac01165f6f4addd64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PUSH25 0x83F88654137DCD442B15CBB4E3C14D01C974E9C0E640EAC011 PUSH6 0xF6F4ADDD6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "16622:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 19469,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220417883f88654137dcd442b15cbb4e3c14d01c974e9c0e640eac01165f6f4addd64736f6c63430008160033",
									".code": [
										{
											"begin": 16622,
											"end": 19469,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16622,
											"end": 19469,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16622,
											"end": 19469,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16622,
											"end": 19469,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16622,
											"end": 19469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16622,
											"end": 19469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16622,
											"end": 19469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16622,
											"end": 19469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16622,
											"end": 19469,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/core/system/flattened/BKSDirectory_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/system/flattened/BKSDirectory_flattened.sol\":{\"keccak256\":\"0x037b2bbb7f35ac7395b5ec45bf1658074a1d914efada7b138b51d8ed635b0f23\",\"urls\":[\"bzz-raw://651de22d80cf5a24aabc6b4a0d475d322c9b45ebaae193b5f34b77af66541889\",\"dweb:/ipfs/Qmf5G2boXsWDA3BediCWP6sMW3VtmbmAenGwPb1jxqhnCN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/core/system/flattened/BKSDirectory_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/core/system/flattened/BKSDirectory_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/core/system/flattened/BKSDirectory_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/core/system/flattened/BKSDirectory_flattened.sol",
					"exportedSymbols": {
						"BKSDirectory": [
							1744
						],
						"BKSSystemContract": [
							1605
						],
						"IBKSDirectory": [
							1439
						],
						"IBKSOpsRegister": [
							1478
						],
						"IBKSVersion": [
							1491
						],
						"Math": [
							1157
						],
						"SignedMath": [
							104
						],
						"Strings": [
							1407
						]
					},
					"id": 1745,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "139:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "165:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104
							],
							"name": "SignedMath",
							"nameLocation": "254:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "406:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 12,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "423:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 13,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "427:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "423:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 16,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "435:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "423:13:0",
													"trueExpression": {
														"id": 15,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 11,
												"id": 18,
												"nodeType": "Return",
												"src": "416:20:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "271:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "351:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "362:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "355:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "355:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "372:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "365:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "365:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "354:20:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "398:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 9,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "398:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:8:0"
									},
									"scope": 104,
									"src": "342:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "585:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 30,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "602:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 31,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "606:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "602:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 34,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "614:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "602:13:0",
													"trueExpression": {
														"id": 33,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "610:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 29,
												"id": 36,
												"nodeType": "Return",
												"src": "595:20:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "449:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "530:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "541:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "534:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "534:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "551:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "544:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 24,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "544:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:20:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "577:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 27,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "577:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:8:0"
									},
									"scope": 104,
									"src": "521:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "827:162:0",
										"statements": [
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "896:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 81,
														"src": "889:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 48,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "889:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 62,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 50,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 51,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "905:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "901:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 53,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "900:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 56,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 54,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 41,
																				"src": "912:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 55,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 43,
																				"src": "916:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "912:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 57,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "911:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "911:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 60,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "910:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "900:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "889:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 63,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 71,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 68,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 49,
																						"src": "961:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 67,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "953:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 66,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "953:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 69,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "953:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "967:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "953:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "946:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 64,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "946:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "946:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 75,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 73,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 41,
																				"src": "975:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 74,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 43,
																				"src": "979:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "975:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 76,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "946:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 78,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "945:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "941:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 47,
												"id": 80,
												"nodeType": "Return",
												"src": "934:48:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "628:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "768:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "783:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "776:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 40,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "776:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "793:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "786:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 42,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "786:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "775:20:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "819:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 45,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:8:0"
									},
									"scope": 104,
									"src": "759:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1133:158:0",
										"statements": [
											{
												"id": 101,
												"nodeType": "UncheckedBlock",
												"src": "1143:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 92,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 85,
																			"src": "1258:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 93,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1263:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1258:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 97,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1271:2:0",
																		"subExpression": {
																			"id": 96,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 85,
																			"src": "1272:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1258:15:0",
																	"trueExpression": {
																		"id": 95,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "1267:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1250:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 90,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1250:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1250:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 89,
														"id": 100,
														"nodeType": "Return",
														"src": "1243:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "995:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1087:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1098:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1091:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 84,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:10:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1124:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:9:0"
									},
									"scope": 104,
									"src": "1078:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1745,
							"src": "246:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1421:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 106,
								"nodeType": "StructuredDocumentation",
								"src": "1447:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1157,
							"linearizedBaseContracts": [
								1157
							],
							"name": "Math",
							"nameLocation": "1529:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "1540:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 109,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "1601:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1621:2:0"
									},
									"src": "1595:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 114,
									"members": [
										{
											"id": 110,
											"name": "Floor",
											"nameLocation": "1654:5:0",
											"nodeType": "EnumValue",
											"src": "1654:5:0"
										},
										{
											"id": 111,
											"name": "Ceil",
											"nameLocation": "1697:4:0",
											"nodeType": "EnumValue",
											"src": "1697:4:0"
										},
										{
											"id": 112,
											"name": "Trunc",
											"nameLocation": "1739:5:0",
											"nodeType": "EnumValue",
											"src": "1739:5:0"
										},
										{
											"id": 113,
											"name": "Expand",
											"nameLocation": "1769:6:0",
											"nodeType": "EnumValue",
											"src": "1769:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "1635:8:0",
									"nodeType": "EnumDefinition",
									"src": "1630:169:0"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1979:140:0",
										"statements": [
											{
												"id": 144,
												"nodeType": "UncheckedBlock",
												"src": "1989:124:0",
												"statements": [
													{
														"assignments": [
															127
														],
														"declarations": [
															{
																"constant": false,
																"id": 127,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2021:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 144,
																"src": "2013:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 126,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2013:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 131,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 128,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2025:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 129,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2029:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2025:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2013:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 132,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2048:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 133,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2052:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2048:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 139,
														"nodeType": "IfStatement",
														"src": "2044:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2063:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2070:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 137,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2062:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 125,
															"id": 138,
															"nodeType": "Return",
															"src": "2055:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2094:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 141,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "2100:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 142,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2093:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 125,
														"id": 143,
														"nodeType": "Return",
														"src": "2086:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "1805:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "1912:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1927:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1919:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1938:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1930:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1918:22:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1964:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1964:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:15:0"
									},
									"scope": 1157,
									"src": "1903:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "2302:113:0",
										"statements": [
											{
												"id": 172,
												"nodeType": "UncheckedBlock",
												"src": "2312:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 158,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "2340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 159,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "2344:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2340:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 165,
														"nodeType": "IfStatement",
														"src": "2336:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2355:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2362:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 163,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2354:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 157,
															"id": 164,
															"nodeType": "Return",
															"src": "2347:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2386:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 167,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "2392:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 168,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2396:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2392:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 170,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2385:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 157,
														"id": 171,
														"nodeType": "Return",
														"src": "2378:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2125:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "2235:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2250:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2242:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2261:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2253:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2241:22:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2287:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2293:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:15:0"
									},
									"scope": 1157,
									"src": "2226:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "2601:417:0",
										"statements": [
											{
												"id": 214,
												"nodeType": "UncheckedBlock",
												"src": "2611:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 186,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "2869:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2874:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2869:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 193,
														"nodeType": "IfStatement",
														"src": "2865:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2885:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2891:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2884:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 185,
															"id": 192,
															"nodeType": "Return",
															"src": "2877:16:0"
														}
													},
													{
														"assignments": [
															195
														],
														"declarations": [
															{
																"constant": false,
																"id": 195,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2915:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 214,
																"src": "2907:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 194,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2907:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 199,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "2919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 197,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "2923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2919:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2907:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 200,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2942:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 201,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "2946:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2942:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 203,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "2951:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2942:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 209,
														"nodeType": "IfStatement",
														"src": "2938:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2962:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2969:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 207,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2961:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 185,
															"id": 208,
															"nodeType": "Return",
															"src": "2954:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2993:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 211,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2999:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 212,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2992:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 185,
														"id": 213,
														"nodeType": "Return",
														"src": "2985:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "2421:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "2534:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2549:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2541:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2560:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2552:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2540:22:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2586:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2586:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2592:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:15:0"
									},
									"scope": 1157,
									"src": "2525:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "3205:114:0",
										"statements": [
											{
												"id": 242,
												"nodeType": "UncheckedBlock",
												"src": "3215:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 228,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "3243:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3248:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3243:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 235,
														"nodeType": "IfStatement",
														"src": "3239:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3259:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3266:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 233,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 227,
															"id": 234,
															"nodeType": "Return",
															"src": "3251:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3290:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 237,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "3296:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 238,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "3300:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3296:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 240,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3289:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 227,
														"id": 241,
														"nodeType": "Return",
														"src": "3282:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3024:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "3138:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3153:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3145:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3164:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3156:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3144:22:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3190:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3196:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3189:15:0"
									},
									"scope": 1157,
									"src": "3129:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "3516:114:0",
										"statements": [
											{
												"id": 270,
												"nodeType": "UncheckedBlock",
												"src": "3526:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 256,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "3554:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3559:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3554:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 263,
														"nodeType": "IfStatement",
														"src": "3550:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3570:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3577:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 261,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3569:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 255,
															"id": 262,
															"nodeType": "Return",
															"src": "3562:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3601:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 265,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "3607:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 266,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "3611:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3607:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 268,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3600:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 255,
														"id": 269,
														"nodeType": "Return",
														"src": "3593:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "3325:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "3449:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3464:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3456:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3475:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3467:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3455:22:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3501:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3501:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3507:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:0"
									},
									"scope": 1157,
									"src": "3440:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "3767:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 282,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "3784:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 283,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "3788:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3784:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 286,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "3796:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3784:13:0",
													"trueExpression": {
														"id": 285,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "3792:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 281,
												"id": 288,
												"nodeType": "Return",
												"src": "3777:20:0"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3636:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3709:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3721:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "3713:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3732:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "3724:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3712:22:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "3758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:9:0"
									},
									"scope": 1157,
									"src": "3700:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "3942:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 300,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "3959:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 301,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "3963:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3959:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 304,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3971:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3959:13:0",
													"trueExpression": {
														"id": 303,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3967:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 299,
												"id": 306,
												"nodeType": "Return",
												"src": "3952:20:0"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "3810:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3884:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3896:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "3888:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3907:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "3899:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3887:22:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "3933:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3932:9:0"
									},
									"scope": 1157,
									"src": "3875:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "4163:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 318,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "4218:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 319,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "4222:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4218:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 321,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "4228:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 323,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "4232:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4228:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 325,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4227:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4237:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "4227:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4217:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 317,
												"id": 329,
												"nodeType": "Return",
												"src": "4210:28:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "3985:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "4101:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4117:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4109:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4128:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4120:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4108:22:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4154:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4153:9:0"
									},
									"scope": 1157,
									"src": "4092:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "4537:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 341,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4551:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4556:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 349,
												"nodeType": "IfStatement",
												"src": "4547:127:0",
												"trueBody": {
													"id": 348,
													"nodeType": "Block",
													"src": "4559:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 344,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "4658:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 345,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "4662:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4658:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 340,
															"id": 347,
															"nodeType": "Return",
															"src": "4651:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 350,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4762:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4767:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4762:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 354,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 334,
																			"src": "4776:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4780:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 357,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4775:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "4785:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4775:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4789:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4775:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4762:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4771:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 363,
												"nodeType": "Return",
												"src": "4755:35:0"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "4251:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "4475:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4491:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4483:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4502:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4494:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4482:22:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4528:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4527:9:0"
									},
									"scope": 1157,
									"src": "4466:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "5219:4018:0",
										"statements": [
											{
												"id": 489,
												"nodeType": "UncheckedBlock",
												"src": "5229:4002:0",
												"statements": [
													{
														"assignments": [
															378
														],
														"declarations": [
															{
																"constant": false,
																"id": 378,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5558:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 489,
																"src": "5550:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 377,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5550:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 382,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "5566:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 380,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "5570:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5566:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5550:21:0"
													},
													{
														"assignments": [
															384
														],
														"declarations": [
															{
																"constant": false,
																"id": 384,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5638:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 489,
																"src": "5630:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 383,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5630:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 385,
														"nodeType": "VariableDeclarationStatement",
														"src": "5630:13:0"
													},
													{
														"AST": {
															"nativeSrc": "5710:122:0",
															"nodeType": "YulBlock",
															"src": "5710:122:0",
															"statements": [
																{
																	"nativeSrc": "5728:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5728:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5745:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "5745:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5748:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "5748:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5755:1:0",
																						"nodeType": "YulLiteral",
																						"src": "5755:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5751:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5751:3:0"
																				},
																				"nativeSrc": "5751:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5751:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5738:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "5738:6:0"
																		},
																		"nativeSrc": "5738:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5738:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5732:2:0",
																			"nodeType": "YulTypedName",
																			"src": "5732:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5775:43:0",
																	"nodeType": "YulAssignment",
																	"src": "5775:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5792:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "5792:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5796:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "5796:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5788:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5788:3:0"
																				},
																				"nativeSrc": "5788:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5788:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5807:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "5807:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5811:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "5811:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5804:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "5804:2:0"
																				},
																				"nativeSrc": "5804:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5804:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5784:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:0"
																		},
																		"nativeSrc": "5784:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5784:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5775:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "5775:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 378,
																"isOffset": false,
																"isSlot": false,
																"src": "5796:5:0",
																"valueSize": 1
															},
															{
																"declaration": 378,
																"isOffset": false,
																"isSlot": false,
																"src": "5811:5:0",
																"valueSize": 1
															},
															{
																"declaration": 384,
																"isOffset": false,
																"isSlot": false,
																"src": "5775:5:0",
																"valueSize": 1
															},
															{
																"declaration": 368,
																"isOffset": false,
																"isSlot": false,
																"src": "5745:1:0",
																"valueSize": 1
															},
															{
																"declaration": 370,
																"isOffset": false,
																"isSlot": false,
																"src": "5748:1:0",
																"valueSize": 1
															}
														],
														"id": 386,
														"nodeType": "InlineAssembly",
														"src": "5701:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 387,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "5913:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5922:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5913:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 395,
														"nodeType": "IfStatement",
														"src": "5909:368:0",
														"trueBody": {
															"id": 394,
															"nodeType": "Block",
															"src": "5925:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 390,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "6243:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 391,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "6251:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6243:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 376,
																	"id": 393,
																	"nodeType": "Return",
																	"src": "6236:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 396,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "6383:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 397,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "6398:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6383:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 403,
														"nodeType": "IfStatement",
														"src": "6379:88:0",
														"trueBody": {
															"id": 402,
															"nodeType": "Block",
															"src": "6405:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 399,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 109,
																			"src": "6430:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6430:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 401,
																	"nodeType": "RevertStatement",
																	"src": "6423:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															405
														],
														"declarations": [
															{
																"constant": false,
																"id": 405,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6730:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 489,
																"src": "6722:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 404,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6722:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 406,
														"nodeType": "VariableDeclarationStatement",
														"src": "6722:17:0"
													},
													{
														"AST": {
															"nativeSrc": "6762:291:0",
															"nodeType": "YulBlock",
															"src": "6762:291:0",
															"statements": [
																{
																	"nativeSrc": "6831:38:0",
																	"nodeType": "YulAssignment",
																	"src": "6831:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6851:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6851:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6854:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "6854:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6857:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "6857:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6844:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "6844:6:0"
																		},
																		"nativeSrc": "6844:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6844:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6831:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "6831:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "6951:41:0",
																	"nodeType": "YulAssignment",
																	"src": "6951:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6964:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6974:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "6974:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6985:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "6985:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6971:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "6971:2:0"
																				},
																				"nativeSrc": "6971:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "6971:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:0"
																		},
																		"nativeSrc": "6960:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6951:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "7009:30:0",
																	"nodeType": "YulAssignment",
																	"src": "7009:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7022:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "7022:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "7029:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "7029:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7018:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "7018:3:0"
																		},
																		"nativeSrc": "7018:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7018:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7009:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "7009:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 372,
																"isOffset": false,
																"isSlot": false,
																"src": "6857:11:0",
																"valueSize": 1
															},
															{
																"declaration": 378,
																"isOffset": false,
																"isSlot": false,
																"src": "6985:5:0",
																"valueSize": 1
															},
															{
																"declaration": 378,
																"isOffset": false,
																"isSlot": false,
																"src": "7009:5:0",
																"valueSize": 1
															},
															{
																"declaration": 378,
																"isOffset": false,
																"isSlot": false,
																"src": "7022:5:0",
																"valueSize": 1
															},
															{
																"declaration": 384,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:0",
																"valueSize": 1
															},
															{
																"declaration": 384,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:0",
																"valueSize": 1
															},
															{
																"declaration": 405,
																"isOffset": false,
																"isSlot": false,
																"src": "6831:9:0",
																"valueSize": 1
															},
															{
																"declaration": 405,
																"isOffset": false,
																"isSlot": false,
																"src": "6974:9:0",
																"valueSize": 1
															},
															{
																"declaration": 405,
																"isOffset": false,
																"isSlot": false,
																"src": "7029:9:0",
																"valueSize": 1
															},
															{
																"declaration": 368,
																"isOffset": false,
																"isSlot": false,
																"src": "6851:1:0",
																"valueSize": 1
															},
															{
																"declaration": 370,
																"isOffset": false,
																"isSlot": false,
																"src": "6854:1:0",
																"valueSize": 1
															}
														],
														"id": 407,
														"nodeType": "InlineAssembly",
														"src": "6753:300:0"
													},
													{
														"assignments": [
															409
														],
														"declarations": [
															{
																"constant": false,
																"id": 409,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7265:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 489,
																"src": "7257:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 408,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7257:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 416,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 410,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "7272:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7287:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 412,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "7291:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7287:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 414,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7286:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7272:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7257:46:0"
													},
													{
														"AST": {
															"nativeSrc": "7326:362:0",
															"nodeType": "YulBlock",
															"src": "7326:362:0",
															"statements": [
																{
																	"nativeSrc": "7391:37:0",
																	"nodeType": "YulAssignment",
																	"src": "7391:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7410:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "7410:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7423:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "7423:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7406:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "7406:3:0"
																		},
																		"nativeSrc": "7406:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7406:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7391:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "7391:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "7495:25:0",
																	"nodeType": "YulAssignment",
																	"src": "7495:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7508:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "7508:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7515:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "7515:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7504:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "7504:3:0"
																		},
																		"nativeSrc": "7504:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7504:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7495:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "7495:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "7635:39:0",
																	"nodeType": "YulAssignment",
																	"src": "7635:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7655:1:0",
																								"nodeType": "YulLiteral",
																								"src": "7655:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7658:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "7658:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7651:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "7651:3:0"
																						},
																						"nativeSrc": "7651:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "7651:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7665:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "7665:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7647:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "7647:3:0"
																				},
																				"nativeSrc": "7647:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "7647:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7672:1:0",
																				"nodeType": "YulLiteral",
																				"src": "7672:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7643:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "7643:3:0"
																		},
																		"nativeSrc": "7643:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7643:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7635:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "7635:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 372,
																"isOffset": false,
																"isSlot": false,
																"src": "7391:11:0",
																"valueSize": 1
															},
															{
																"declaration": 372,
																"isOffset": false,
																"isSlot": false,
																"src": "7410:11:0",
																"valueSize": 1
															},
															{
																"declaration": 378,
																"isOffset": false,
																"isSlot": false,
																"src": "7495:5:0",
																"valueSize": 1
															},
															{
																"declaration": 378,
																"isOffset": false,
																"isSlot": false,
																"src": "7508:5:0",
																"valueSize": 1
															},
															{
																"declaration": 409,
																"isOffset": false,
																"isSlot": false,
																"src": "7423:4:0",
																"valueSize": 1
															},
															{
																"declaration": 409,
																"isOffset": false,
																"isSlot": false,
																"src": "7515:4:0",
																"valueSize": 1
															},
															{
																"declaration": 409,
																"isOffset": false,
																"isSlot": false,
																"src": "7635:4:0",
																"valueSize": 1
															},
															{
																"declaration": 409,
																"isOffset": false,
																"isSlot": false,
																"src": "7658:4:0",
																"valueSize": 1
															},
															{
																"declaration": 409,
																"isOffset": false,
																"isSlot": false,
																"src": "7665:4:0",
																"valueSize": 1
															}
														],
														"id": 417,
														"nodeType": "InlineAssembly",
														"src": "7317:371:0"
													},
													{
														"expression": {
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 418,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "7754:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 419,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "7763:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 420,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "7771:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7763:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7754:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 423,
														"nodeType": "ExpressionStatement",
														"src": "7754:21:0"
													},
													{
														"assignments": [
															425
														],
														"declarations": [
															{
																"constant": false,
																"id": 425,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8101:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 489,
																"src": "8093:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 424,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8093:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 432,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8112:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 427,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "8116:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8112:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 429,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8111:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8111:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8093:39:0"
													},
													{
														"expression": {
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 433,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "8349:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8360:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 435,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "8364:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 436,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "8378:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8364:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8360:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8349:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 440,
														"nodeType": "ExpressionStatement",
														"src": "8349:36:0"
													},
													{
														"expression": {
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 441,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "8418:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8429:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 443,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "8433:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 444,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "8447:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8433:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8429:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8418:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 448,
														"nodeType": "ExpressionStatement",
														"src": "8418:36:0"
													},
													{
														"expression": {
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 449,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "8488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8499:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 451,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "8503:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 452,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "8517:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8503:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8499:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8488:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "8488:36:0"
													},
													{
														"expression": {
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 457,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "8558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8569:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 459,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "8573:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 460,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "8587:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8573:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8569:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8558:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 464,
														"nodeType": "ExpressionStatement",
														"src": "8558:36:0"
													},
													{
														"expression": {
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 465,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "8628:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8639:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 467,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "8643:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 468,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "8657:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8643:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8639:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8628:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 472,
														"nodeType": "ExpressionStatement",
														"src": "8628:36:0"
													},
													{
														"expression": {
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 473,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "8699:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8710:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 475,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "8714:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 476,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "8728:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8714:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8710:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8699:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 480,
														"nodeType": "ExpressionStatement",
														"src": "8699:36:0"
													},
													{
														"expression": {
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 481,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "9169:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 482,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "9178:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 483,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "9186:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9178:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9169:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 486,
														"nodeType": "ExpressionStatement",
														"src": "9169:24:0"
													},
													{
														"expression": {
															"id": 487,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "9214:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 376,
														"id": 488,
														"nodeType": "Return",
														"src": "9207:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "4803:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5130:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5145:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "5137:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5156:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "5148:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5167:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "5159:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5136:43:0"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5211:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "5203:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5202:16:0"
									},
									"scope": 1157,
									"src": "5121:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "9479:192:0",
										"statements": [
											{
												"assignments": [
													507
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9497:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "9489:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 513,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "9513:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 510,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "9516:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 511,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "9519:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															491,
															534
														],
														"referencedDeclaration": 491,
														"src": "9506:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9506:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9489:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 515,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "9562:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$114",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$114",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 514,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "9545:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$114_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9545:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "9582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 519,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "9585:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 520,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "9588:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 517,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "9575:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9575:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9603:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9575:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9545:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 530,
												"nodeType": "IfStatement",
												"src": "9541:101:0",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "9606:36:0",
													"statements": [
														{
															"expression": {
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 525,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "9620:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9630:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9620:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "9620:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 531,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 507,
													"src": "9658:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 532,
												"nodeType": "Return",
												"src": "9651:13:0"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "9243:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9378:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9393:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "9385:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9404:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "9396:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9415:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "9407:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9437:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "9428:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$114",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 500,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 499,
														"name": "Rounding",
														"nameLocations": [
															"9428:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 114,
														"src": "9428:8:0"
													},
													"referencedDeclaration": 114,
													"src": "9428:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$114",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9384:62:0"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "9470:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9469:9:0"
									},
									"scope": 1157,
									"src": "9369:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "9962:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 542,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "9976:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9981:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9976:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 548,
												"nodeType": "IfStatement",
												"src": "9972:45:0",
												"trueBody": {
													"id": 547,
													"nodeType": "Block",
													"src": "9984:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10005:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 541,
															"id": 546,
															"nodeType": "Return",
															"src": "9998:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10704:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "10696:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 549,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10696:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10713:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 553,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "10724:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 552,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			813,
																			848
																		],
																		"referencedDeclaration": 813,
																		"src": "10719:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10719:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10730:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10719:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 557,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10718:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10713:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10696:36:0"
											},
											{
												"id": 644,
												"nodeType": "UncheckedBlock",
												"src": "11133:408:0",
												"statements": [
													{
														"expression": {
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 560,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "11157:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 561,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "11167:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 562,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 537,
																					"src": "11176:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 563,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 550,
																					"src": "11180:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11176:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11167:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 566,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11166:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11191:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11166:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11157:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "11157:35:0"
													},
													{
														"expression": {
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 571,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "11206:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 572,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "11216:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 573,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 537,
																					"src": "11225:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 574,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 550,
																					"src": "11229:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11225:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11216:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11215:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11240:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11215:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11206:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 581,
														"nodeType": "ExpressionStatement",
														"src": "11206:35:0"
													},
													{
														"expression": {
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 582,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "11255:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 583,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "11265:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 584,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 537,
																					"src": "11274:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 585,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 550,
																					"src": "11278:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11274:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11265:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 588,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11264:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11289:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11264:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11255:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 592,
														"nodeType": "ExpressionStatement",
														"src": "11255:35:0"
													},
													{
														"expression": {
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 593,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "11304:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 594,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "11314:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 595,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 537,
																					"src": "11323:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 596,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 550,
																					"src": "11327:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11323:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11314:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 599,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11313:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11338:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11313:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11304:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 603,
														"nodeType": "ExpressionStatement",
														"src": "11304:35:0"
													},
													{
														"expression": {
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 604,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "11353:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 605,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "11363:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 606,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 537,
																					"src": "11372:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 607,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 550,
																					"src": "11376:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11372:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11363:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 610,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11362:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11387:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11362:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11353:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 614,
														"nodeType": "ExpressionStatement",
														"src": "11353:35:0"
													},
													{
														"expression": {
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 615,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "11402:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 616,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "11412:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 617,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 537,
																					"src": "11421:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 618,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 550,
																					"src": "11425:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11421:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11412:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 621,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11411:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11436:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11411:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11402:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 625,
														"nodeType": "ExpressionStatement",
														"src": "11402:35:0"
													},
													{
														"expression": {
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 626,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "11451:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 627,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "11461:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 628,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 537,
																					"src": "11470:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 629,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 550,
																					"src": "11474:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11470:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11461:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 632,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11460:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11485:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11460:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11451:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 636,
														"nodeType": "ExpressionStatement",
														"src": "11451:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 638,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "11511:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 639,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "11519:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 640,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "11523:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11519:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 637,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "11507:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11507:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 541,
														"id": 643,
														"nodeType": "Return",
														"src": "11500:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "9677:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "9914:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9927:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "9919:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9918:11:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "9953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9952:9:0"
									},
									"scope": 1157,
									"src": "9905:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "11723:164:0",
										"statements": [
											{
												"id": 679,
												"nodeType": "UncheckedBlock",
												"src": "11733:148:0",
												"statements": [
													{
														"assignments": [
															658
														],
														"declarations": [
															{
																"constant": false,
																"id": 658,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11765:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 679,
																"src": "11757:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 657,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11757:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 662,
														"initialValue": {
															"arguments": [
																{
																	"id": 660,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "11779:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 659,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	646,
																	681
																],
																"referencedDeclaration": 646,
																"src": "11774:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11774:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11757:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 663,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "11802:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 665,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 652,
																						"src": "11829:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$114",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$114",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 664,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1156,
																					"src": "11812:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$114_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11812:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 669,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 667,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "11842:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 668,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "11851:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11842:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 670,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 649,
																					"src": "11860:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11842:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11812:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11868:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11812:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11864:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 676,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11811:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11802:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 656,
														"id": 678,
														"nodeType": "Return",
														"src": "11795:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "11553:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "11656:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11669:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "11661:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11681:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "11672:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$114",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 650,
														"name": "Rounding",
														"nameLocations": [
															"11672:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 114,
														"src": "11672:8:0"
													},
													"referencedDeclaration": 114,
													"src": "11672:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$114",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11660:30:0"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "11714:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11713:9:0"
									},
									"scope": 1157,
									"src": "11647:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "12078:922:0",
										"statements": [
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12096:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "12088:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 689,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"hexValue": "30",
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12105:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12088:18:0"
											},
											{
												"id": 809,
												"nodeType": "UncheckedBlock",
												"src": "12116:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 693,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "12144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12153:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "12144:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12159:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12144:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 707,
														"nodeType": "IfStatement",
														"src": "12140:99:0",
														"trueBody": {
															"id": 706,
															"nodeType": "Block",
															"src": "12162:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 698,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "12180:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12190:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "12180:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 701,
																	"nodeType": "ExpressionStatement",
																	"src": "12180:13:0"
																},
																{
																	"expression": {
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 702,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "12211:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12221:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "12211:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 705,
																	"nodeType": "ExpressionStatement",
																	"src": "12211:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 708,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "12256:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12265:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12256:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12270:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12256:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 722,
														"nodeType": "IfStatement",
														"src": "12252:96:0",
														"trueBody": {
															"id": 721,
															"nodeType": "Block",
															"src": "12273:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 713,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "12291:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12301:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12291:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 716,
																	"nodeType": "ExpressionStatement",
																	"src": "12291:12:0"
																},
																{
																	"expression": {
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 717,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "12321:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12331:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12321:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 720,
																	"nodeType": "ExpressionStatement",
																	"src": "12321:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "12365:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12374:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12365:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12379:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12365:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 737,
														"nodeType": "IfStatement",
														"src": "12361:96:0",
														"trueBody": {
															"id": 736,
															"nodeType": "Block",
															"src": "12382:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 728,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "12400:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12410:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12400:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 731,
																	"nodeType": "ExpressionStatement",
																	"src": "12400:12:0"
																},
																{
																	"expression": {
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 732,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "12430:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12440:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12430:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 735,
																	"nodeType": "ExpressionStatement",
																	"src": "12430:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 738,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "12474:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12483:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12474:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12488:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12474:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 752,
														"nodeType": "IfStatement",
														"src": "12470:96:0",
														"trueBody": {
															"id": 751,
															"nodeType": "Block",
															"src": "12491:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 743,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "12509:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12519:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12509:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 746,
																	"nodeType": "ExpressionStatement",
																	"src": "12509:12:0"
																},
																{
																	"expression": {
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 747,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "12539:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12549:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12539:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 750,
																	"nodeType": "ExpressionStatement",
																	"src": "12539:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "12583:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12592:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12583:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12596:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12583:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 767,
														"nodeType": "IfStatement",
														"src": "12579:93:0",
														"trueBody": {
															"id": 766,
															"nodeType": "Block",
															"src": "12599:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "12617:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12627:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12617:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 761,
																	"nodeType": "ExpressionStatement",
																	"src": "12617:11:0"
																},
																{
																	"expression": {
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 762,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "12646:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12646:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 768,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "12689:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12698:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12689:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12702:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12689:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 782,
														"nodeType": "IfStatement",
														"src": "12685:93:0",
														"trueBody": {
															"id": 781,
															"nodeType": "Block",
															"src": "12705:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 773,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "12723:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12733:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12723:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 776,
																	"nodeType": "ExpressionStatement",
																	"src": "12723:11:0"
																},
																{
																	"expression": {
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 777,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "12752:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12762:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12752:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 780,
																	"nodeType": "ExpressionStatement",
																	"src": "12752:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 783,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "12795:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12804:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12795:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12808:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12795:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 797,
														"nodeType": "IfStatement",
														"src": "12791:93:0",
														"trueBody": {
															"id": 796,
															"nodeType": "Block",
															"src": "12811:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "12829:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12839:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12829:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 791,
																	"nodeType": "ExpressionStatement",
																	"src": "12829:11:0"
																},
																{
																	"expression": {
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 792,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "12858:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12868:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12858:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 795,
																	"nodeType": "ExpressionStatement",
																	"src": "12858:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 798,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "12901:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12910:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12901:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12914:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 808,
														"nodeType": "IfStatement",
														"src": "12897:64:0",
														"trueBody": {
															"id": 807,
															"nodeType": "Block",
															"src": "12917:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 803,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "12935:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12945:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12935:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 806,
																	"nodeType": "ExpressionStatement",
																	"src": "12935:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 810,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 690,
													"src": "12987:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 688,
												"id": 811,
												"nodeType": "Return",
												"src": "12980:13:0"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "11893:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12026:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12039:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "12031:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12030:15:0"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "12069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12068:9:0"
									},
									"scope": 1157,
									"src": "12017:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "13233:168:0",
										"statements": [
											{
												"id": 846,
												"nodeType": "UncheckedBlock",
												"src": "13243:152:0",
												"statements": [
													{
														"assignments": [
															825
														],
														"declarations": [
															{
																"constant": false,
																"id": 825,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13275:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 846,
																"src": "13267:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 824,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13267:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 829,
														"initialValue": {
															"arguments": [
																{
																	"id": 827,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "13289:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 826,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	813,
																	848
																],
																"referencedDeclaration": 813,
																"src": "13284:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13284:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13267:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 830,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "13316:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 832,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 819,
																						"src": "13343:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$114",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$114",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 831,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1156,
																					"src": "13326:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$114_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13326:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 836,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 834,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13356:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 835,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 825,
																						"src": "13361:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13356:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 837,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 816,
																					"src": "13370:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13356:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13326:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13382:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13326:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13378:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 843,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13325:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13316:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 823,
														"id": 845,
														"nodeType": "Return",
														"src": "13309:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "13006:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "13162:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13175:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "13167:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13191:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "13182:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$114",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 818,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 817,
														"name": "Rounding",
														"nameLocations": [
															"13182:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 114,
														"src": "13182:8:0"
													},
													"referencedDeclaration": 114,
													"src": "13182:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$114",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13166:34:0"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "13224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13223:9:0"
									},
									"scope": 1157,
									"src": "13153:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "13594:854:0",
										"statements": [
											{
												"assignments": [
													857
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13612:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "13604:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 856,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"hexValue": "30",
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13621:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13604:18:0"
											},
											{
												"id": 973,
												"nodeType": "UncheckedBlock",
												"src": "13632:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 860,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "13660:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13669:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13675:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "13669:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "13660:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 876,
														"nodeType": "IfStatement",
														"src": "13656:103:0",
														"trueBody": {
															"id": 875,
															"nodeType": "Block",
															"src": "13679:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 865,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "13697:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13706:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13712:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "13706:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "13697:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 870,
																	"nodeType": "ExpressionStatement",
																	"src": "13697:17:0"
																},
																{
																	"expression": {
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 871,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "13732:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13742:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "13732:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 874,
																	"nodeType": "ExpressionStatement",
																	"src": "13732:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 877,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "13776:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13785:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13791:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "13785:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "13776:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 893,
														"nodeType": "IfStatement",
														"src": "13772:103:0",
														"trueBody": {
															"id": 892,
															"nodeType": "Block",
															"src": "13795:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 882,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "13813:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13822:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13828:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "13822:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "13813:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 887,
																	"nodeType": "ExpressionStatement",
																	"src": "13813:17:0"
																},
																{
																	"expression": {
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 888,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "13848:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13858:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "13848:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 891,
																	"nodeType": "ExpressionStatement",
																	"src": "13848:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 894,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "13892:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13901:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13907:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "13901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "13892:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 910,
														"nodeType": "IfStatement",
														"src": "13888:103:0",
														"trueBody": {
															"id": 909,
															"nodeType": "Block",
															"src": "13911:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 899,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "13929:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13938:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13944:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "13938:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "13929:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 904,
																	"nodeType": "ExpressionStatement",
																	"src": "13929:17:0"
																},
																{
																	"expression": {
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 905,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "13964:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13974:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13964:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 908,
																	"nodeType": "ExpressionStatement",
																	"src": "13964:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 911,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "14008:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14017:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14023:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14017:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "14008:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 927,
														"nodeType": "IfStatement",
														"src": "14004:100:0",
														"trueBody": {
															"id": 926,
															"nodeType": "Block",
															"src": "14026:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 916,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "14044:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14053:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14059:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "14053:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "14044:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 921,
																	"nodeType": "ExpressionStatement",
																	"src": "14044:16:0"
																},
																{
																	"expression": {
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 922,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "14078:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14088:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14078:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 925,
																	"nodeType": "ExpressionStatement",
																	"src": "14078:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 928,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "14121:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14130:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14136:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "14130:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "14121:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 944,
														"nodeType": "IfStatement",
														"src": "14117:100:0",
														"trueBody": {
															"id": 943,
															"nodeType": "Block",
															"src": "14139:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 933,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "14157:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14166:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14172:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "14166:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "14157:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 938,
																	"nodeType": "ExpressionStatement",
																	"src": "14157:16:0"
																},
																{
																	"expression": {
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 939,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "14191:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14201:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14191:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"nodeType": "ExpressionStatement",
																	"src": "14191:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 945,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "14234:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14243:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14249:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "14243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "14234:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 961,
														"nodeType": "IfStatement",
														"src": "14230:100:0",
														"trueBody": {
															"id": 960,
															"nodeType": "Block",
															"src": "14252:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 950,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "14270:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14279:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14285:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "14279:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "14270:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 955,
																	"nodeType": "ExpressionStatement",
																	"src": "14270:16:0"
																},
																{
																	"expression": {
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 956,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "14304:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14314:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14304:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 959,
																	"nodeType": "ExpressionStatement",
																	"src": "14304:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 962,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "14347:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14356:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14362:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "14356:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "14347:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 972,
														"nodeType": "IfStatement",
														"src": "14343:66:0",
														"trueBody": {
															"id": 971,
															"nodeType": "Block",
															"src": "14365:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 967,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "14383:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14393:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14383:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 970,
																	"nodeType": "ExpressionStatement",
																	"src": "14383:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 974,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 857,
													"src": "14435:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 855,
												"id": 975,
												"nodeType": "Return",
												"src": "14428:13:0"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "13407:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13541:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13555:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "13547:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13546:15:0"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "13585:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13584:9:0"
									},
									"scope": 1157,
									"src": "13532:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "14683:170:0",
										"statements": [
											{
												"id": 1010,
												"nodeType": "UncheckedBlock",
												"src": "14693:154:0",
												"statements": [
													{
														"assignments": [
															989
														],
														"declarations": [
															{
																"constant": false,
																"id": 989,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14725:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1010,
																"src": "14717:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 988,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14717:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 993,
														"initialValue": {
															"arguments": [
																{
																	"id": 991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "14740:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 990,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	977,
																	1012
																],
																"referencedDeclaration": 977,
																"src": "14734:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14734:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14717:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 994,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "14767:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 996,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 983,
																						"src": "14794:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$114",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$114",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 995,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1156,
																					"src": "14777:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$114_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14777:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1000,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 998,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14807:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 999,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 989,
																						"src": "14813:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14807:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1001,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 980,
																					"src": "14822:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14807:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14777:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14834:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14777:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14830:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1007,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14776:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14767:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 987,
														"id": 1009,
														"nodeType": "Return",
														"src": "14760:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "14454:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "14611:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14625:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "14617:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14641:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "14632:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$114",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 982,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 981,
														"name": "Rounding",
														"nameLocations": [
															"14632:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 114,
														"src": "14632:8:0"
													},
													"referencedDeclaration": 114,
													"src": "14632:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$114",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14616:34:0"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "14674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14673:9:0"
									},
									"scope": 1157,
									"src": "14602:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "15173:600:0",
										"statements": [
											{
												"assignments": [
													1021
												],
												"declarations": [
													{
														"constant": false,
														"id": 1021,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "15191:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "15183:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1020,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15183:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1023,
												"initialValue": {
													"hexValue": "30",
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15200:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15183:18:0"
											},
											{
												"id": 1095,
												"nodeType": "UncheckedBlock",
												"src": "15211:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1024,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "15239:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15248:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "15239:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15254:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15239:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1038,
														"nodeType": "IfStatement",
														"src": "15235:98:0",
														"trueBody": {
															"id": 1037,
															"nodeType": "Block",
															"src": "15257:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1029,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1015,
																			"src": "15275:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15285:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "15275:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1032,
																	"nodeType": "ExpressionStatement",
																	"src": "15275:13:0"
																},
																{
																	"expression": {
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1033,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "15306:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15316:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "15306:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1036,
																	"nodeType": "ExpressionStatement",
																	"src": "15306:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1039,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "15350:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15359:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "15350:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15364:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15350:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1053,
														"nodeType": "IfStatement",
														"src": "15346:95:0",
														"trueBody": {
															"id": 1052,
															"nodeType": "Block",
															"src": "15367:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1044,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1015,
																			"src": "15385:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15395:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "15385:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1047,
																	"nodeType": "ExpressionStatement",
																	"src": "15385:12:0"
																},
																{
																	"expression": {
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1048,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "15415:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15425:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "15415:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1051,
																	"nodeType": "ExpressionStatement",
																	"src": "15415:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1054,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "15458:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15467:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "15458:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15472:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15458:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1068,
														"nodeType": "IfStatement",
														"src": "15454:95:0",
														"trueBody": {
															"id": 1067,
															"nodeType": "Block",
															"src": "15475:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1059,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1015,
																			"src": "15493:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15503:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "15493:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1062,
																	"nodeType": "ExpressionStatement",
																	"src": "15493:12:0"
																},
																{
																	"expression": {
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1063,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "15523:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15533:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "15523:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1066,
																	"nodeType": "ExpressionStatement",
																	"src": "15523:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1069,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "15566:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15575:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "15566:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15580:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15566:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1083,
														"nodeType": "IfStatement",
														"src": "15562:95:0",
														"trueBody": {
															"id": 1082,
															"nodeType": "Block",
															"src": "15583:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1074,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1015,
																			"src": "15601:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15611:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "15601:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1077,
																	"nodeType": "ExpressionStatement",
																	"src": "15601:12:0"
																},
																{
																	"expression": {
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1078,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "15631:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15641:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "15631:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1081,
																	"nodeType": "ExpressionStatement",
																	"src": "15631:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1084,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "15674:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15683:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "15674:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15687:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15674:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1094,
														"nodeType": "IfStatement",
														"src": "15670:64:0",
														"trueBody": {
															"id": 1093,
															"nodeType": "Block",
															"src": "15690:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1089,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "15708:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15718:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "15708:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1092,
																	"nodeType": "ExpressionStatement",
																	"src": "15708:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1096,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1021,
													"src": "15760:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1019,
												"id": 1097,
												"nodeType": "Return",
												"src": "15753:13:0"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "14859:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "15119:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15134:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "15126:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15125:15:0"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "15164:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15163:9:0"
									},
									"scope": 1157,
									"src": "15110:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "16010:177:0",
										"statements": [
											{
												"id": 1135,
												"nodeType": "UncheckedBlock",
												"src": "16020:161:0",
												"statements": [
													{
														"assignments": [
															1111
														],
														"declarations": [
															{
																"constant": false,
																"id": 1111,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "16052:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1135,
																"src": "16044:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1110,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16044:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1115,
														"initialValue": {
															"arguments": [
																{
																	"id": 1113,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "16068:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1112,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1099,
																	1137
																],
																"referencedDeclaration": 1099,
																"src": "16061:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16061:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16044:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "16095:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1118,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1105,
																						"src": "16122:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$114",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$114",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1117,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1156,
																					"src": "16105:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$114_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16105:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "16135:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1123,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1121,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1111,
																									"src": "16141:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1122,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "16151:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "16141:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1124,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "16140:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "16135:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1126,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1102,
																					"src": "16156:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16135:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "16105:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16168:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "16105:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16164:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1132,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16104:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "16095:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1109,
														"id": 1134,
														"nodeType": "Return",
														"src": "16088:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "15779:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "15937:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15952:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "15944:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15968:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "15959:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$114",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1103,
														"name": "Rounding",
														"nameLocations": [
															"15959:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 114,
														"src": "15959:8:0"
													},
													"referencedDeclaration": 114,
													"src": "15959:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$114",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15943:34:0"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "16001:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16000:9:0"
									},
									"scope": 1157,
									"src": "15928:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "16385:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1148,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "16408:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$114",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$114",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1146,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "16402:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16402:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16420:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "16402:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16425:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "16402:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1145,
												"id": 1154,
												"nodeType": "Return",
												"src": "16395:31:0"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "16193:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "16320:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "16346:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "16337:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$114",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "Rounding",
														"nameLocations": [
															"16337:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 114,
														"src": "16337:8:0"
													},
													"referencedDeclaration": 114,
													"src": "16337:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$114",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16336:19:0"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "16379:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16379:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16378:6:0"
									},
									"scope": 1157,
									"src": "16311:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1745,
							"src": "1521:14914:0",
							"usedErrors": [
								109
							],
							"usedEvents": []
						},
						{
							"id": 1158,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "16559:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1159,
								"nodeType": "StructuredDocumentation",
								"src": "16587:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1407,
							"linearizedBaseContracts": [
								1407
							],
							"name": "Strings",
							"nameLocation": "16630:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1162,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "16669:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1407,
									"src": "16644:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1160,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "16644:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1161,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16682:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1165,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "16729:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1407,
									"src": "16706:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1163,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "16706:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1164,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16746:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "16755:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1172,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "16847:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16884:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "16876:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "16899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "16891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16875:31:0"
									},
									"src": "16841:66:0"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "17079:627:0",
										"statements": [
											{
												"id": 1218,
												"nodeType": "UncheckedBlock",
												"src": "17089:611:0",
												"statements": [
													{
														"assignments": [
															1181
														],
														"declarations": [
															{
																"constant": false,
																"id": 1181,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "17121:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1218,
																"src": "17113:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1180,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17113:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1188,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1184,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "17141:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1182,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "17130:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1157_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17135:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 977,
																	"src": "17130:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17130:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17150:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17130:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17113:38:0"
													},
													{
														"assignments": [
															1190
														],
														"declarations": [
															{
																"constant": false,
																"id": 1190,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "17179:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1218,
																"src": "17165:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1189,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "17165:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1195,
														"initialValue": {
															"arguments": [
																{
																	"id": 1193,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "17199:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "17188:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1191,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "17192:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17188:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17165:41:0"
													},
													{
														"assignments": [
															1197
														],
														"declarations": [
															{
																"constant": false,
																"id": 1197,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "17228:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1218,
																"src": "17220:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1196,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17220:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1198,
														"nodeType": "VariableDeclarationStatement",
														"src": "17220:11:0"
													},
													{
														"AST": {
															"nativeSrc": "17301:67:0",
															"nodeType": "YulBlock",
															"src": "17301:67:0",
															"statements": [
																{
																	"nativeSrc": "17319:35:0",
																	"nodeType": "YulAssignment",
																	"src": "17319:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "17330:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "17330:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "17342:2:0",
																						"nodeType": "YulLiteral",
																						"src": "17342:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "17346:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "17346:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17338:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "17338:3:0"
																				},
																				"nativeSrc": "17338:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "17338:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17326:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17326:3:0"
																		},
																		"nativeSrc": "17326:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17326:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "17319:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17319:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1190,
																"isOffset": false,
																"isSlot": false,
																"src": "17330:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1181,
																"isOffset": false,
																"isSlot": false,
																"src": "17346:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1197,
																"isOffset": false,
																"isSlot": false,
																"src": "17319:3:0",
																"valueSize": 1
															}
														],
														"id": 1199,
														"nodeType": "InlineAssembly",
														"src": "17292:76:0"
													},
													{
														"body": {
															"id": 1214,
															"nodeType": "Block",
															"src": "17394:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "17412:5:0",
																		"subExpression": {
																			"id": 1201,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "17412:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1203,
																	"nodeType": "ExpressionStatement",
																	"src": "17412:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "17495:86:0",
																		"nodeType": "YulBlock",
																		"src": "17495:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "17525:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "17525:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "17539:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "17539:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17546:2:0",
																											"nodeType": "YulLiteral",
																											"src": "17546:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "17535:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "17535:3:0"
																									},
																									"nativeSrc": "17535:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "17535:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "17551:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "17551:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "17530:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "17530:4:0"
																							},
																							"nativeSrc": "17530:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "17530:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "17517:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "17517:7:0"
																					},
																					"nativeSrc": "17517:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "17517:46:0"
																				},
																				"nativeSrc": "17517:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "17517:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1162,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "17551:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1197,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "17525:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1175,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "17539:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1204,
																	"nodeType": "InlineAssembly",
																	"src": "17486:95:0"
																},
																{
																	"expression": {
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "17598:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17607:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "17598:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1208,
																	"nodeType": "ExpressionStatement",
																	"src": "17598:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1209,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "17631:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17640:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17631:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1213,
																	"nodeType": "IfStatement",
																	"src": "17627:21:0",
																	"trueBody": {
																		"id": 1212,
																		"nodeType": "Break",
																		"src": "17643:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17388:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1215,
														"nodeType": "WhileStatement",
														"src": "17381:282:0"
													},
													{
														"expression": {
															"id": 1216,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "17683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1179,
														"id": 1217,
														"nodeType": "Return",
														"src": "17676:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "16913:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "17017:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17034:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "17026:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17025:15:0"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "17064:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1177,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17063:15:0"
									},
									"scope": 1407,
									"src": "17008:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "17882:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1231,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "17913:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17921:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17913:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17931:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "17913:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17925:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1240,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "17959:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1238,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 104,
																			"src": "17944:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$104_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17955:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 103,
																		"src": "17944:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17944:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1237,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "17935:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17935:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17899:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1228,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "17899:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17906:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "17899:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17899:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1227,
												"id": 1244,
												"nodeType": "Return",
												"src": "17892:75:0"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "17712:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "17815:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17837:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "17830:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1222,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17830:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17829:14:0"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "17867:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17867:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17866:15:0"
									},
									"scope": 1407,
									"src": "17806:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "18153:100:0",
										"statements": [
											{
												"id": 1264,
												"nodeType": "UncheckedBlock",
												"src": "18163:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1255,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "18206:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1258,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "18225:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1256,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "18213:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1157_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "18218:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1099,
																			"src": "18213:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18213:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18234:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "18213:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1254,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1266,
																	1349,
																	1369
																],
																"referencedDeclaration": 1349,
																"src": "18194:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18194:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1253,
														"id": 1263,
														"nodeType": "Return",
														"src": "18187:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "17980:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "18088:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "18100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18099:15:0"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "18138:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1251,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18138:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18137:15:0"
									},
									"scope": 1407,
									"src": "18079:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "18466:435:0",
										"statements": [
											{
												"assignments": [
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "18484:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "18476:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1279,
												"initialValue": {
													"id": 1278,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1269,
													"src": "18497:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18476:26:0"
											},
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "18525:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "18512:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1280,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18512:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18544:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1285,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "18548:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18544:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18557:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "18544:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "18534:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1282,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18538:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18534:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18512:47:0"
											},
											{
												"expression": {
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1291,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "18569:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1293,
														"indexExpression": {
															"hexValue": "30",
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18576:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18569:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18581:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "18569:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "18569:15:0"
											},
											{
												"expression": {
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1297,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "18594:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1299,
														"indexExpression": {
															"hexValue": "31",
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18601:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18594:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18606:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "18594:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "18594:15:0"
											},
											{
												"body": {
													"id": 1331,
													"nodeType": "Block",
													"src": "18664:95:0",
													"statements": [
														{
															"expression": {
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1317,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1281,
																		"src": "18678:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1319,
																	"indexExpression": {
																		"id": 1318,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "18685:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18678:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1320,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "18690:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1324,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1321,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1277,
																			"src": "18701:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18714:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "18701:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18690:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "18678:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1326,
															"nodeType": "ExpressionStatement",
															"src": "18678:40:0"
														},
														{
															"expression": {
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1327,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "18732:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18747:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "18732:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1330,
															"nodeType": "ExpressionStatement",
															"src": "18732:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1311,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1304,
														"src": "18652:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18656:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "18652:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1332,
												"initializationExpression": {
													"assignments": [
														1304
													],
													"declarations": [
														{
															"constant": false,
															"id": 1304,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "18632:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1332,
															"src": "18624:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1303,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18624:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1310,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1306,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "18640:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18636:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18649:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "18636:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "18624:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "18659:3:0",
														"subExpression": {
															"id": 1314,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "18661:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1316,
													"nodeType": "ExpressionStatement",
													"src": "18659:3:0"
												},
												"nodeType": "ForStatement",
												"src": "18619:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1333,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "18772:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18786:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18772:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1342,
												"nodeType": "IfStatement",
												"src": "18768:96:0",
												"trueBody": {
													"id": 1341,
													"nodeType": "Block",
													"src": "18789:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1337,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "18839:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1338,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1271,
																		"src": "18846:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1336,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "18810:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18810:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1340,
															"nodeType": "RevertStatement",
															"src": "18803:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1345,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "18887:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "18880:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1343,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "18880:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18880:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1275,
												"id": 1347,
												"nodeType": "Return",
												"src": "18873:21:0"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "18259:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "18385:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18405:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "18397:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "18420:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "18412:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18396:31:0"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "18451:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1273,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18451:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18450:15:0"
									},
									"scope": 1407,
									"src": "18376:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "19133:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1362,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "19178:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "19170:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1360,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "19170:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19170:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19162:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1358,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19162:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19162:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1365,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "19186:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1357,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1266,
															1349,
															1369
														],
														"referencedDeclaration": 1349,
														"src": "19150:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19150:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1367,
												"nodeType": "Return",
												"src": "19143:58:0"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "18907:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "19069:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "19089:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "19081:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19080:14:0"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "19118:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19118:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19117:15:0"
									},
									"scope": 1407,
									"src": "19060:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "19363:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1381,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1372,
																		"src": "19386:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19380:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1379,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "19380:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19380:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19389:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "19380:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1386,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "19405:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19399:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1384,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "19399:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19399:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19408:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "19399:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19380:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1393,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "19434:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "19428:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1391,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "19428:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19428:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1390,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "19418:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19418:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1399,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1374,
																			"src": "19457:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "19451:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1397,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "19451:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19451:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1396,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "19441:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19441:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "19418:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19380:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1404,
												"nodeType": "Return",
												"src": "19373:87:0"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "19214:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "19294:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19314:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "19300:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19331:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "19317:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19317:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19299:34:0"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "19357:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19357:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19356:6:0"
									},
									"scope": 1407,
									"src": "19285:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1745,
							"src": "16622:2847:0",
							"usedErrors": [
								1172
							],
							"usedEvents": []
						},
						{
							"id": 1408,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19528:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBKSDirectory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1409,
								"nodeType": "StructuredDocumentation",
								"src": "19561:299:0",
								"text": " @title Black Sock - Directory\n @author cryptotwilight\n @dev This is the directory used to keep track of all user generated addresses in the Black Sock decentralized protocol \n @custom:buidl at Buidl Up 2023 https://www.buidlbox.io\n @custom:contact @blockstarlogic1 (Twitter)"
							},
							"fullyImplemented": false,
							"id": 1439,
							"linearizedBaseContracts": [
								1439
							],
							"name": "IBKSDirectory",
							"nameLocation": "19872:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "7ab7be41",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBKSAddresses",
									"nameLocation": "19903:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19918:2:0"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "_addresses",
												"nameLocation": "19962:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "19944:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1411,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19944:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1412,
													"nodeType": "ArrayTypeName",
													"src": "19944:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19943:30:0"
									},
									"scope": 1439,
									"src": "19894:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bd1b2210",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isBKSAddress",
									"nameLocation": "19989:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "20010:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "20002:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20001:18:0"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "_isBKSAddress",
												"nameLocation": "20048:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "20043:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20043:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20042:20:0"
									},
									"scope": 1439,
									"src": "19980:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "783db809",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressOwner",
									"nameLocation": "20078:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "20102:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "20094:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20093:18:0"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "20143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "20135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20134:16:0"
									},
									"scope": 1439,
									"src": "20069:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e5bc301e",
									"id": 1438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addBKSAddress",
									"nameLocation": "20166:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "20188:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "20180:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "_userOwner",
												"nameLocation": "20206:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "20198:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20198:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20179:38:0"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "_added",
												"nameLocation": "20241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "20236:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20235:13:0"
									},
									"scope": 1439,
									"src": "20157:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1745,
							"src": "19862:389:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1440,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20311:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBKSOpsRegister",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1441,
								"nodeType": "StructuredDocumentation",
								"src": "20344:333:0",
								"text": " @title Black Sock - Operations Register \n @author cryptotwilight\n @dev This is the Operations Register that is used to keep track of all system level contracts in the Black Sock decentralized social protocol \n @custom:buidl at Buidl Up 2023 https://www.buidlbox.io\n @custom:contact @blockstarlogic1 (Twitter)"
							},
							"fullyImplemented": false,
							"id": 1478,
							"linearizedBaseContracts": [
								1478
							],
							"name": "IBKSOpsRegister",
							"nameLocation": "20688:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cd838f0f",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNames",
									"nameLocation": "20721:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20729:2:0"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "_names",
												"nameLocation": "20772:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "20755:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1443,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "20755:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1444,
													"nodeType": "ArrayTypeName",
													"src": "20755:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20754:25:0"
									},
									"scope": 1478,
									"src": "20712:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a39fac12",
									"id": 1456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddresses",
									"nameLocation": "20795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20807:2:0"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "20850:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "20833:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1449,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "20833:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1450,
													"nodeType": "ArrayTypeName",
													"src": "20833:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "20875:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "20857:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1452,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "20857:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1453,
													"nodeType": "ArrayTypeName",
													"src": "20857:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20832:52:0"
									},
									"scope": 1478,
									"src": "20786:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bf40fac1",
									"id": 1463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "20900:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "20925:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "20911:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20910:21:0"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "20963:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "20955:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20954:18:0"
									},
									"scope": 1478,
									"src": "20891:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5fd4b08a",
									"id": 1470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "20988:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "21004:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "20996:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20995:18:0"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "21051:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "21037:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21037:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21036:21:0"
									},
									"scope": 1478,
									"src": "20979:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f9ec7ba",
									"id": 1477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAddress",
									"nameLocation": "21073:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "21097:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "21089:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21088:18:0"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "_isSystemAddress",
												"nameLocation": "21135:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "21130:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21130:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21129:23:0"
									},
									"scope": 1478,
									"src": "21064:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1745,
							"src": "20678:478:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1479,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21212:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBKSVersion",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1480,
								"nodeType": "StructuredDocumentation",
								"src": "21245:283:0",
								"text": " @title Black Sock - Version\n @author cryptotwilight\n @dev This is the versioning and introspection interface used by the Black Sock decentralized social protocol\n @custom:buidl Buidl Up 2023 https://www.buidlbox.io\n @custom:contact @blockstarlogic1 (Twitter)"
							},
							"fullyImplemented": false,
							"id": 1491,
							"linearizedBaseContracts": [
								1491
							],
							"name": "IBKSVersion",
							"nameLocation": "21539:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "17d7de7c",
									"id": 1485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "21568:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21575:2:0"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "21615:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "21601:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21601:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21600:21:0"
									},
									"scope": 1491,
									"src": "21559:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0d8e6e2c",
									"id": 1490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVersion",
									"nameLocation": "21641:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21651:2:0"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "_version",
												"nameLocation": "21685:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "21677:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21676:18:0"
									},
									"scope": 1491,
									"src": "21632:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1745,
							"src": "21529:169:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1492,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21754:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1494,
										"name": "IBKSVersion",
										"nameLocations": [
											"22115:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1491,
										"src": "22115:11:0"
									},
									"id": 1495,
									"nodeType": "InheritanceSpecifier",
									"src": "22115:11:0"
								}
							],
							"canonicalName": "BKSSystemContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1493,
								"nodeType": "StructuredDocumentation",
								"src": "21787:283:0",
								"text": " @title Black Sock - System Contract\n @author cryptotwilight\n @dev This is the super contract for system contracts in the Black Sock decentralized social protocol\n @custom:buidl Buidl Up 2023 https://www.buidlbox.io\n @custom:contact @blockstarlogic1 (Twitter)"
							},
							"fullyImplemented": false,
							"id": 1605,
							"linearizedBaseContracts": [
								1605,
								1491
							],
							"name": "BKSSystemContract",
							"nameLocation": "22094:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1498,
									"libraryName": {
										"id": 1496,
										"name": "Strings",
										"nameLocations": [
											"22141:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1407,
										"src": "22141:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22135:26:0",
									"typeName": {
										"id": 1497,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22153:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"id": 1501,
									"mutability": "constant",
									"name": "BKS_DIRECTORY_CA",
									"nameLocation": "22184:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "22168:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1499,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "22168:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "424b535f4449524543544f52595f434f5245",
										"id": 1500,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22203:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_decc059b5daaa9a1e7f1f50d58c014083d259593e54e0db520a603e5c0d06b95",
											"typeString": "literal_string \"BKS_DIRECTORY_CORE\""
										},
										"value": "BKS_DIRECTORY_CORE"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1504,
									"mutability": "constant",
									"name": "BKS_ADMIN_CA",
									"nameLocation": "22245:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "22229:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1502,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "22229:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "424b535f41444d494e",
										"id": 1503,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22260:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_51e5fd4da67ad28504635c7274c4bcb17a1c2b4941870f705109d92eef2ac501",
											"typeString": "literal_string \"BKS_ADMIN\""
										},
										"value": "BKS_ADMIN"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1506,
									"mutability": "mutable",
									"name": "index",
									"nameLocation": "22286:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "22278:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1505,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22278:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "22321:135:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1511,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "22364:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22368:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "22364:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1509,
																	"name": "register",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1579,
																	"src": "22339:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBKSOpsRegister_$1478",
																		"typeString": "contract IBKSOpsRegister"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22348:15:0",
																"memberName": "isSystemAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1477,
																"src": "22339:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22339:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "73797374656d206f6e6c79207820203a783a20",
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22390:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_a7cd720da15681d3dc7da499391ca9468d6a5d72c6d6b1d85ce3e07632843101",
																		"typeString": "literal_string \"system only x  :x: \""
																	},
																	"value": "system only x  :x: "
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"expression": {
																				"id": 1518,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "22412:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "22416:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "22412:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22423:11:0",
																		"memberName": "toHexString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1369,
																		"src": "22412:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$attached_to$_t_address_$",
																			"typeString": "function (address) pure returns (string memory)"
																		}
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22412:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_a7cd720da15681d3dc7da499391ca9468d6a5d72c6d6b1d85ce3e07632843101",
																		"typeString": "literal_string \"system only x  :x: \""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22376:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1514,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "22376:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22383:6:0",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "22376:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22376:61:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22331:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "22331:107:0"
											},
											{
												"id": 1525,
												"nodeType": "PlaceholderStatement",
												"src": "22448:1:0"
											}
										]
									},
									"id": 1527,
									"name": "systemOnly",
									"nameLocation": "22308:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22318:2:0"
									},
									"src": "22299:157:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "22483:146:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1530,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "22502:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22506:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "22502:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1534,
																		"name": "BKS_ADMIN_CA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1504,
																		"src": "22536:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1532,
																		"name": "register",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1579,
																		"src": "22516:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBKSOpsRegister_$1478",
																			"typeString": "contract IBKSOpsRegister"
																		}
																	},
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22525:10:0",
																	"memberName": "getAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1463,
																	"src": "22516:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (string memory) view external returns (address)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22516:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22502:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "61646d696e206f6e6c79207820203a783a20",
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22564:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_62cd2feb7bca576db56714d0fb6e6a16d43c1991f3eb0636ebd5cea29d7cc803",
																		"typeString": "literal_string \"admin only x  :x: \""
																	},
																	"value": "admin only x  :x: "
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"expression": {
																				"id": 1541,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "22585:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "22589:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "22585:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22596:11:0",
																		"memberName": "toHexString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1369,
																		"src": "22585:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$attached_to$_t_address_$",
																			"typeString": "function (address) pure returns (string memory)"
																		}
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22585:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_62cd2feb7bca576db56714d0fb6e6a16d43c1991f3eb0636ebd5cea29d7cc803",
																		"typeString": "literal_string \"admin only x  :x: \""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22550:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1537,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "22550:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22557:6:0",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "22550:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22550:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22494:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "22494:117:0"
											},
											{
												"id": 1548,
												"nodeType": "PlaceholderStatement",
												"src": "22621:1:0"
											}
										]
									},
									"id": 1550,
									"name": "adminOnly",
									"nameLocation": "22471:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22480:2:0"
									},
									"src": "22462:167:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "22654:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1560,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "22740:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22744:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "22740:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1556,
																					"name": "BKS_DIRECTORY_CA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1501,
																					"src": "22708:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 1554,
																					"name": "register",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1579,
																					"src": "22688:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBKSOpsRegister_$1478",
																						"typeString": "contract IBKSOpsRegister"
																					}
																				},
																				"id": 1555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "22697:10:0",
																				"memberName": "getAddress",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1463,
																				"src": "22688:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																					"typeString": "function (string memory) view external returns (address)"
																				}
																			},
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22688:37:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1553,
																		"name": "IBKSDirectory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "22674:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IBKSDirectory_$1439_$",
																			"typeString": "type(contract IBKSDirectory)"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22674:52:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBKSDirectory_$1439",
																		"typeString": "contract IBKSDirectory"
																	}
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22727:12:0",
																"memberName": "isBKSAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1422,
																"src": "22674:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22674:77:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "756e6b6e6f776e20626b732061646472657373203a783a20",
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22767:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_fe9d894a35d9d6c6535290789234cab79c4400e257e27824cbfd9a8acba2d322",
																		"typeString": "literal_string \"unknown bks address :x: \""
																	},
																	"value": "unknown bks address :x: "
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"expression": {
																				"id": 1567,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "22794:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "22798:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "22794:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "22805:11:0",
																		"memberName": "toHexString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1369,
																		"src": "22794:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$attached_to$_t_address_$",
																			"typeString": "function (address) pure returns (string memory)"
																		}
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22794:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_fe9d894a35d9d6c6535290789234cab79c4400e257e27824cbfd9a8acba2d322",
																		"typeString": "literal_string \"unknown bks address :x: \""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22753:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1563,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "22753:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22760:6:0",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "22753:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22753:66:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22665:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22665:155:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "22665:155:0"
											},
											{
												"id": 1574,
												"nodeType": "PlaceholderStatement",
												"src": "22830:1:0"
											}
										]
									},
									"id": 1576,
									"name": "bksOnly",
									"nameLocation": "22644:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22651:2:0"
									},
									"src": "22635:203:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1579,
									"mutability": "mutable",
									"name": "register",
									"nameLocation": "22860:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1605,
									"src": "22844:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBKSOpsRegister_$1478",
										"typeString": "contract IBKSOpsRegister"
									},
									"typeName": {
										"id": 1578,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1577,
											"name": "IBKSOpsRegister",
											"nameLocations": [
												"22844:15:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1478,
											"src": "22844:15:0"
										},
										"referencedDeclaration": 1478,
										"src": "22844:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBKSOpsRegister_$1478",
											"typeString": "contract IBKSOpsRegister"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "22910:57:0",
										"statements": [
											{
												"expression": {
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1584,
														"name": "register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "22920:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBKSOpsRegister_$1478",
															"typeString": "contract IBKSOpsRegister"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1586,
																"name": "_opsRegister",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "22947:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1585,
															"name": "IBKSOpsRegister",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "22931:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBKSOpsRegister_$1478_$",
																"typeString": "type(contract IBKSOpsRegister)"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22931:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBKSOpsRegister_$1478",
															"typeString": "contract IBKSOpsRegister"
														}
													},
													"src": "22920:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBKSOpsRegister_$1478",
														"typeString": "contract IBKSOpsRegister"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "22920:40:0"
											}
										]
									},
									"id": 1591,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "_opsRegister",
												"nameLocation": "22896:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "22888:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22887:22:0"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22910:0:0"
									},
									"scope": 1605,
									"src": "22876:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "23094:57:0",
										"statements": [
											{
												"expression": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1596,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "23104:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "23113:7:0",
														"subExpression": {
															"id": 1597,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "23113:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23104:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "23104:16:0"
											},
											{
												"expression": {
													"id": 1601,
													"name": "_index",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1594,
													"src": "23137:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1595,
												"id": 1602,
												"nodeType": "Return",
												"src": "23130:13:0"
											}
										]
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIndex",
									"nameLocation": "23049:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23057:2:0"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "23086:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "23078:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23077:16:0"
									},
									"scope": 1605,
									"src": "23040:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1745,
							"src": "22076:1078:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1606,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23205:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1608,
										"name": "BKSSystemContract",
										"nameLocations": [
											"23537:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1605,
										"src": "23537:17:0"
									},
									"id": 1609,
									"nodeType": "InheritanceSpecifier",
									"src": "23537:17:0"
								},
								{
									"baseName": {
										"id": 1610,
										"name": "IBKSDirectory",
										"nameLocations": [
											"23556:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1439,
										"src": "23556:13:0"
									},
									"id": 1611,
									"nodeType": "InheritanceSpecifier",
									"src": "23556:13:0"
								}
							],
							"canonicalName": "BKSDirectory",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1607,
								"nodeType": "StructuredDocumentation",
								"src": "23238:271:0",
								"text": " @title Black Sock - Directory\n @author cryptotwilight\n @dev This is the Directory implementation for the Black Sock decentralized social protocol \n @custom:buidl at Buidl Up 2023 https://www.buidlbox.io\n @custom:contact @blockstarlogic1 (Twitter)"
							},
							"fullyImplemented": true,
							"id": 1744,
							"linearizedBaseContracts": [
								1744,
								1439,
								1605,
								1491
							],
							"name": "BKSDirectory",
							"nameLocation": "23521:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1614,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "23593:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1744,
									"src": "23577:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1612,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "23577:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "424b535f4449524543544f52595f434f5245",
										"id": 1613,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23601:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_decc059b5daaa9a1e7f1f50d58c014083d259593e54e0db520a603e5c0d06b95",
											"typeString": "literal_string \"BKS_DIRECTORY_CORE\""
										},
										"value": "BKS_DIRECTORY_CORE"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1617,
									"mutability": "constant",
									"name": "version",
									"nameLocation": "23644:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1744,
									"src": "23627:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1615,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23627:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1616,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23654:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1620,
									"mutability": "mutable",
									"name": "addresses",
									"nameLocation": "23674:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1744,
									"src": "23663:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1618,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23663:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1619,
										"nodeType": "ArrayTypeName",
										"src": "23663:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1624,
									"mutability": "mutable",
									"name": "knownBKSAddress",
									"nameLocation": "23713:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1744,
									"src": "23690:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1623,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1621,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23698:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "23690:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1622,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "23707:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1628,
									"mutability": "mutable",
									"name": "ownerByAddress",
									"nameLocation": "23760:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1744,
									"src": "23734:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1627,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1625,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23742:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "23734:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1626,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23751:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1633,
									"mutability": "mutable",
									"name": "addressesByOwner",
									"nameLocation": "23809:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1744,
									"src": "23781:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 1632,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1629,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23789:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "23781:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1630,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "23798:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 1631,
											"nodeType": "ArrayTypeName",
											"src": "23798:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "23892:7:0",
										"statements": []
									},
									"id": 1642,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1638,
													"name": "_register",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1635,
													"src": "23882:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1639,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1637,
												"name": "BKSSystemContract",
												"nameLocations": [
													"23864:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1605,
												"src": "23864:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23864:28:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "_register",
												"nameLocation": "23853:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "23845:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23844:19:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23892:0:0"
									},
									"scope": 1744,
									"src": "23833:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1485
									],
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "23967:29:0",
										"statements": [
											{
												"expression": {
													"id": 1647,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1614,
													"src": "23984:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1648,
												"nodeType": "Return",
												"src": "23977:11:0"
											}
										]
									},
									"functionSelector": "17d7de7c",
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "23914:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23921:2:0"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "23961:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "23947:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23947:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23946:21:0"
									},
									"scope": 1744,
									"src": "23905:91:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1490
									],
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "24063:32:0",
										"statements": [
											{
												"expression": {
													"id": 1655,
													"name": "version",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1617,
													"src": "24080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1654,
												"id": 1656,
												"nodeType": "Return",
												"src": "24073:14:0"
											}
										]
									},
									"functionSelector": "0d8e6e2c",
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVersion",
									"nameLocation": "24010:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24020:2:0"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "_version",
												"nameLocation": "24054:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "24046:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24045:18:0"
									},
									"scope": 1744,
									"src": "24001:94:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "24180:34:0",
										"statements": [
											{
												"expression": {
													"id": 1664,
													"name": "addresses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1620,
													"src": "24197:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1663,
												"id": 1665,
												"nodeType": "Return",
												"src": "24190:16:0"
											}
										]
									},
									"functionSelector": "7ab7be41",
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBKSAddresses",
									"nameLocation": "24110:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24125:2:0"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "_addresses",
												"nameLocation": "24169:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "24151:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1660,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "24151:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1661,
													"nodeType": "ArrayTypeName",
													"src": "24151:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24150:30:0"
									},
									"scope": 1744,
									"src": "24101:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1429
									],
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "24302:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1674,
														"name": "ownerByAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "24319:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1676,
													"indexExpression": {
														"id": 1675,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "24334:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24319:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1673,
												"id": 1677,
												"nodeType": "Return",
												"src": "24312:31:0"
											}
										]
									},
									"functionSelector": "783db809",
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressOwner",
									"nameLocation": "24229:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "24253:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "24245:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24244:18:0"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "24294:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "24286:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24285:16:0"
									},
									"scope": 1744,
									"src": "24220:130:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "24447:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1687,
														"name": "addressesByOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "24464:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1689,
													"indexExpression": {
														"id": 1688,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "24481:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24464:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1686,
												"id": 1690,
												"nodeType": "Return",
												"src": "24457:31:0"
											}
										]
									},
									"functionSelector": "906f6343",
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddresses",
									"nameLocation": "24365:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "24386:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "24378:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24377:16:0"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "_addresses",
												"nameLocation": "24435:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "24417:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1683,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "24417:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1684,
													"nodeType": "ArrayTypeName",
													"src": "24417:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24416:30:0"
									},
									"scope": 1744,
									"src": "24356:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1422
									],
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "24584:49:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1699,
														"name": "knownBKSAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "24601:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1701,
													"indexExpression": {
														"id": 1700,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "24617:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24601:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1698,
												"id": 1702,
												"nodeType": "Return",
												"src": "24594:32:0"
											}
										]
									},
									"functionSelector": "bd1b2210",
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBKSAddress",
									"nameLocation": "24510:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "24531:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "24523:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24522:18:0"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "_isBKSAddress",
												"nameLocation": "24570:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "24565:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24564:20:0"
									},
									"scope": 1744,
									"src": "24501:132:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1438
									],
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "24737:198:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1718,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "24762:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1715,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "24747:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24757:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "24747:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24747:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "24747:24:0"
											},
											{
												"expression": {
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1721,
															"name": "knownBKSAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "24781:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1723,
														"indexExpression": {
															"id": 1722,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "24797:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24781:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24809:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "24781:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1726,
												"nodeType": "ExpressionStatement",
												"src": "24781:32:0"
											},
											{
												"expression": {
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1727,
															"name": "ownerByAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "24824:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1729,
														"indexExpression": {
															"id": 1728,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "24839:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24824:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1730,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "24851:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24824:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "24824:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1737,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "24898:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1733,
																"name": "addressesByOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "24868:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1735,
															"indexExpression": {
																"id": 1734,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "24885:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24868:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24893:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "24868:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24868:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "24868:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1714,
												"id": 1741,
												"nodeType": "Return",
												"src": "24917:11:0"
											}
										]
									},
									"functionSelector": "e5bc301e",
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1711,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1710,
												"name": "systemOnly",
												"nameLocations": [
													"24705:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1527,
												"src": "24705:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24705:10:0"
										}
									],
									"name": "addBKSAddress",
									"nameLocation": "24648:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "24670:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "24662:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "24688:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "24680:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24661:34:0"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "_added",
												"nameLocation": "24730:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "24725:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24725:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24724:13:0"
									},
									"scope": 1744,
									"src": "24639:296:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1745,
							"src": "23512:1427:0",
							"usedErrors": [
								1172
							],
							"usedEvents": []
						}
					],
					"src": "139:24803:0"
				},
				"id": 0
			}
		}
	}
}